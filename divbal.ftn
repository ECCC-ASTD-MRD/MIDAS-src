!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      subroutine divbal(pgdpsi,pgdchi)
#if defined (DOC)
*
***s/r divbal - Constructs grid-point balanced divergence (vel. pot.)
*               from input grid-point (PSI) increments during minimization
*     .
* Purpose
*     .  Build the balanced divergence (actually velocity potential)
*
*Author  : Mark Buehner *ARMA/AES  August, 1998
*
*Revision :
*         C. Charette - ARMA/SMC - Sept 2004
*          - Conversion to hybrid vertical coordinate
*            New variable nlev_bdl
*Arguments
*
* In
*    pgdpsi : Grid-point del(PSI)
*    pgdchi : Grid-point (unbalanced) del(CHI)
* Out
*    pgdchi : Grid-point total del(CHI)
*     .
*Revision:
#endif
C
      IMPLICIT NONE
#include "pardim.cdk"
#include "comdim.cdk"
#include "comgem.cdk"
#include "comcorr.cdk"
C
      INTEGER ILON, JK1, JLON, JLAT
      REAL*8 ZFACT
      REAL*8 pgdpsi(NIBEG:NIEND,nflev,NJBEG:NJEND)
      REAL*8 pgdchi(NIBEG:NIEND,nflev,NJBEG:NJEND)
c
c
      DO JLAT = 1, NJ
        ILON = NILON(JLAT)
        do jk1=nlev_bdl,NFLEV
          zfact=-tan(THETA(jk1,jlat))
          DO JLON = 1, ILON
            pGDCHI(jlon,jk1,jlat)=pGDCHI(jlon,jk1,jlat) +
     +                      zfact*pGDPSI(jlon,jk1,jlat)
          enddo
        END DO
      END DO
c
      RETURN
      END
