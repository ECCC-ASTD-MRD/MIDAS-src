#!/bin/ksh

set -ex

arguments=$*
eval `cclargs_lite -D "" $0 \
  -fstdin            "."        "."        "[Directory for inputs files (default: .)]" \
  -suffix            "_proc000" "_proc000" "[suffix of the files to be processed]" \
  -editfst           "editfst"  "editfst"  "[path to 'editfst' (default: the one in the PATH)]" \
  -fasttmp           "no"       "yes"      "[Using the FASTTMP technology]" \
  -npex              "1"   "1"  "[number of MPI tiles in the x direction (default to 1]" \
  -npey              "1"   "1"  "[number of MPI tiles in the y direction (default to 1]" \
  -omp_stacksize     "2G"  "2G" "[set the variable OMP_STACKSIZE to that number]" \
  -mpi_ssm           ""    ""   "[SSM domains to load the MPI environment]" \
  -oavar_mpirun      "midas.mpirun" "midas.mpirun" "[script 'midas.mpirun' to launch MPI binaries (default: the one in the PATH)]" \
  -run_in_parallel   "r.run_in_parallel"   "r.run_in_parallel"  "[path to 'r.run_in_parallel' (default: the one in the PATH)]" \
  ++ $arguments`

for file000 in ${fstdin}/*${suffix}; do
    if [ -f "${file000}" ]; then
	echo "midas.combineFstd: There is at least one file found"
	break
    else
	echo "midas.combineFstd: No files found to combine"
	exit 1
    fi
done

ramdiskpath=${MIDAS_RAMDISKPATH:-${TMPDIR}}

fileList=$(echo ${fstdin}/*${suffix})

cp_cmd=$(which cp)
rm_cmd=$(which rm)
mkdir_cmd=$(which mkdir)
echo_cmd=$(which echo)
basename_cmd=$(which basename)
ls_cmd=$(which ls)
xargs_cmd=$(which xargs)

cat > mpi_script.sh <<EOF
#!/bin/ksh

set -ex

SECONDS=0

fileList=(${fileList})

file000=\${fileList[\${MP_CHILD}]}

if [ ! -f "\${file000}" ]; then
    ${echo_cmd} "midas.combineFstd: This thread will not process any file (MP_CHILD=\${MP_CHILD})"
    exit 0
fi

${echo_cmd} SECONDS=\${SECONDS}

file_nosuffix=\$(${basename_cmd} \${file000} ${suffix})
${echo_cmd} "midas.combineFstd: Building the file: \${file_nosuffix}"

if [ "${fasttmp}" = yes ]; then
    FASTTMPDIR=${ramdiskpath}/\${MP_CHILD}
    ${mkdir_cmd} -p \${FASTTMPDIR}
    export TMPDIR=\${FASTTMPDIR}
    cd \${FASTTMPDIR}
    time ${cp_cmd} ${fstdin}/\${file_nosuffix}_proc??? .
    input_dir=.
else
    input_dir=${fstdin}
    export TMPDIR=\${PWD}/tmpdir_\${MP_CHILD}
    ${mkdir_cmd} \${TMPDIR}
fi
echo SECONDS=\${SECONDS}

echo SECONDS=\${SECONDS}
${ls_cmd} -1 \${input_dir}/\${file_nosuffix}_proc??? | ${xargs_cmd} -t -L 120 time ${editfst} -d \${file_nosuffix} -i 0 -s
echo SECONDS=\${SECONDS}

echo SECONDS=\${SECONDS}

if [ "${fasttmp}" = yes ]; then
    time ${cp_cmd} \${file_nosuffix} ${PWD}
    cd ${PWD}
    ${rm_cmd} -rf \${FASTTMPDIR}
fi

echo SECONDS=\${SECONDS}

EOF

chmod +x mpi_script.sh

${oavar_mpirun} "Launching midas.combineFstd" "${mpi_ssm}" "${omp_stacksize}" ${run_in_parallel} -pgm ./mpi_script.sh -npex ${SEQ_NPEX} -npey ${SEQ_NPEY} -tmpdir ${PWD}/combineFstd_mpi_tmpdir -nompi pseudo_mpi
