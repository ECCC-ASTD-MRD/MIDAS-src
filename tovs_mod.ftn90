Module mod_tovs

  Use mod_cparam, only  :  JPPF,JPNSAT,JPLEV,JPCH, &
                           JPCHUS,JPNAV,JPNSAV, & 
                           JPNSSV,JPNCV,JPCHPF

  Use rttov_types, only : &
     rttov_coef          ,&
     profile_type        ,&
     transmission_Type   ,&
     radiance_type

  INTEGER ,PARAMETER :: NCLASSAVHRR=7
  INTEGER ,PARAMETER :: NIR=3,NVIS=3
  INTEGER ,PARAMETER :: NCHANAVHRR=NIR+NVIS

  type( rttov_coef ),save  :: coeff_avhrr(1)

  TYPE avhrr_bgck_iasi
     SEQUENCE   
     REAL(8)              :: RADMOY(NCLASSAVHRR,NCHANAVHRR)
     REAL(8)              :: RADSTD(NCLASSAVHRR,NCHANAVHRR)
     REAL(8)              :: CFRAC(NCLASSAVHRR)
     REAL(8)              :: TBMOY(NCLASSAVHRR,NVIS+1:NVIS+NIR)
     REAL(8)              :: TBSTD(NCLASSAVHRR,NVIS+1:NVIS+NIR)
     REAL(8)              :: ALBEDMOY(NCLASSAVHRR,1:NVIS)
     REAL(8)              :: ALBEDSTD(NCLASSAVHRR,1:NVIS)
     REAL(8)              :: TBSTD_PIXELIASI(NVIS+1:NVIS+NIR)
     REAL(8)              :: ALBSTD_PIXELIASI(1:NVIS)
     REAL(8)              :: RADCLEARCALC(NVIS+1:NVIS+NIR)
     REAL(8)              :: TBCLEARCALC(NVIS+1:NVIS+NIR)
     REAL(8)              :: RADOVCALC(jplev,NVIS+1:NVIS+NIR)
     REAL(8)              :: TRANSMCALC(jplev,NVIS+1:NVIS+NIR)
     REAL(8)              :: TRANSMSURF(NVIS+1:NVIS+NIR)
     REAL(8)              :: EMISS(NVIS+1:NVIS+NIR)
  END TYPE avhrr_bgck_iasi

  TYPE prof_qc
     SEQUENCE
     REAL(8)              :: LAT      ! latitude (-90 to 90)
     REAL(8)              :: LON      ! longitude (0 to 360)
     REAL(8), POINTER     :: Z(:)     ! height field (m)
     REAL(8)              :: SUNZA    ! sun zenith angle (deg)
     REAL                 :: ALBEDO   ! surface albedo (0-1)
     REAL                 :: ICE      ! ice cover (0-1) 
     REAL                 :: SNOW     ! snow cover (0-1)
     INTEGER              :: LTYPE    ! surface type (1,...,20)
     REAL                 :: PCNT_WAT ! water percentage in pixel containing profile (0-1)
     REAL                 :: PCNT_REG ! water percentage in an area around profile (0-1)
  END TYPE prof_qc

  type( rttov_coef )  ,     allocatable :: coef(:)           ! coefficients
  type( profile_Type ),     allocatable :: profilesdata(:)   ! profiles buffer used in rttov calls
  type( profile_Type ),     allocatable :: profiles(:)       ! profiles, all profiles
  type( profile_Type ),     allocatable :: profiles_tl(:)    ! tl profiles, all profiles
  type( profile_Type ),     allocatable :: profiles_ad(:)    ! ad profiles, all profiles
  type( prof_qc )     ,     allocatable :: profiles_qc(:)    ! profiles buffer used in airsqc call
  type(radiance_Type)     :: radiancedata_d                  ! radiances full structure buffer used in rttov calls
  type(radiance_Type) ,     allocatable :: radiance_d(:)     ! radiances organized by profile
  type(radiance_Type) ,     allocatable :: radiance_tl(:)    ! tl radiances organized by profile
  type(radiance_Type) ,     allocatable :: radiance_ad(:)    ! tl radiances organized by profile
  type(transmission_Type) :: transmission                    ! transmissions full structure buffer used in rttov calls
  type(transmission_Type) , allocatable :: transmission_d(:) ! transmissions organized by profile
  real(8)                 , allocatable :: emissivity(:,:)   ! surface emissivities organized by profiles and channels


  type(avhrr_bgck_iasi)  , allocatable :: avhrr_bgck(:)     ! avhrr parameters for IASI quality control

  Integer, allocatable :: nchan(:)              ! number of channels per instrument
  Integer, allocatable :: ichan(:,:)            ! list of channels per instrument
  Integer, allocatable :: lsensor(:)            ! sensor number for each profile
  Integer, allocatable :: lobsno (:)            ! observation number in cma for each profile
  Integer, allocatable :: ltovsno (:)           ! index in TOVS structures for each observation in cma
  Integer, allocatable :: list_sensors(:,:)     ! list of platform, satellite and instrument
  Integer, allocatable :: rttov_errorstatus(:)  ! rttov error status for each profile

  Integer JPMOTOP, JPMOLEV, nobtov

End Module mod_tovs

