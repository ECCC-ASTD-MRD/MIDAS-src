!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE oda_maskgo
      use modmask, only : lmaskgo, lmask
      use obsSpaceData_mod
      implicit none
#if defined (DOC)
*
*Purpose : Defines a mask of assimilated data
*
*Author  : S. Pellerin, ARMA, January 2009
*          Based on selection made in observation operator as written by
*          N. Wagneur *CMDA/MSC in May 2001
*
*Revision:
*
#endif

#include "comdim.cdk"
#include "comdimo.cdk"


#include "cparamgoes.cdk"
#include "comjacgoes.cdk"
* Local declarations
      INTEGER J, I, IO
      INTEGER JDATA, IDATA, ITYP, IDATEND
      INTEGER JN, ICHN

      INTEGER MDATA(JPNB,NGOES)

      if(nobgoes.eq.0) return

      DO J = 1, NGOES
        DO I = 1, JPNB
          MDATA(I,J) = 0
        ENDDO
      ENDDO
C
      DO JN = 1, NGOES
        IO      = MJOGO(JN)
        IDATA   = obs_elem_i(obsSpaceData,'RLN ',IO)
        IDATEND = obs_elem_i(obsSpaceData,'NLV ',IO)+IDATA - 1

        DO JDATA = IDATA, IDATEND
          ITYP = obs_elem_i(obsSpaceData,'VNM ',JDATA)

          IF (( ITYP.EQ.12062 .OR.
     S         ITYP.EQ.12063 .OR.
     S         ITYP.EQ.12163).and. obs_elem_i(obsSpaceData,'ASS ',JDATA).NE.0) THEN
C
            ICHN = NINT(obs_elem_r8(obsSpaceData,'PPP ',JDATA))
C
            MDATA (ICHN,JN) = JDATA
          ENDIF
        enddo
      enddo

      DO J = 1, NGOES
        DO I = 1, JPNB
          IF (MDATA(I,J) .NE. 0 ) THEN
            lmaskgo(mdata(i,j)) = .true.
          ENDIF
        ENDDO
      ENDDO
      lmask = lmask .or. lmaskgo
      RETURN
      END
