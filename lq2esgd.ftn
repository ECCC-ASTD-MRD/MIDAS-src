!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
*
      subroutine lq2esgd(pesinc,statevector,statevectorg)
*
***S/R lq2esgd  -  Computes increments of ES=T-TD FROM T AND lnq
*                  increments in Grid-Point Space.
*
#if defined (DOC)
*
*Author: L. Fillion - ARMA/AES - 19 Nov 98 - Grid-Point version of
C LMHUAESV
*
*Revision:
*          Y.J. Rochon and Cecilien Charette - SMC - Sept 2004
*            - Conversion to hybrid vertical coordinate
*            - Use of new function FOTW8 FODTW8(in fintern8.cdk)
*              Follow WMO convention on T-Td vs HU relationship)
*
*Arguments:
*
* Out:
*      pesinc : Dew-point depression increment on the analysis grid
* IN:
*      statevector    : increment
*      statevectorg   : Background state on analysis grid
*
*Object:   For Postprocessing analysis increment (called by DIAG3DVAR):
*          calculate the TLM OF dew point depression from TLM specific
*          humidity, temperature and pressure.  No ice phase is
*          CONSIDERED.
*
#endif
      use MathPhysConstants_mod
      use gridStateVector_mod
      IMPLICIT NONE
      type(struct_gsv) :: statevector,statevectorg
      real*8 pesinc(statevectorg%ni,statevectorg%nlev,statevectorg%nj)
      integer ji,jj,jk
      REAL*8 ZE, ZEL, ZTD, ZTDL, ZGAMMA, zpres
      real*8, pointer :: ps3d_trl_ptr(:,:,:),ps3d_inc_ptr(:,:,:),hu3d_trl_ptr(:,:,:),hu3d_inc_ptr(:,:,:),tt3d_inc_ptr(:,:,:)
*
#include "dinternv.cdk"
#include "finternva.cdk"
#include "finternvl.cdk"
#include "dintern8.cdk"
#include "fintern8.cdk"
**
      WRITE(*,FMT='(/,4X,"Starting LQ2ESGD",//)')
      ps3d_trl_ptr => gsv_getField3D(statevectorg,'P0')
      ps3d_inc_ptr => gsv_getField3D(statevector ,'P0')
      hu3d_trl_ptr => gsv_getField3D(statevectorg,'HU')
      hu3d_inc_ptr => gsv_getField3D(statevector ,'HU')
      tt3d_inc_ptr => gsv_getField3D(statevector ,'TT')
*
      do jk=1,statevectorg%nlev
        do ji=1,statevectorg%ni
          do jj=1,statevectorg%nj
            zpres  = statevectorg%vco%da_M(jk) + statevectorg%vco%db_M(jk)*ps3d_trl_ptr(ji,1,jj)
*
*          First do the forward branch to get saturated vapour pressure
*          from q
*
            ZE = FOEFQ8(max(hu3d_trl_ptr(ji,jk,jj),1.d-12), zpres)
!            ZE = FOEFQ8(hu3d_trl_ptr(ji,jk,jj), zpres)
*
*          TLM of the saturated vapor pressure from q (specific humidity)
*
            ZEL = FOEFQL(hu3d_inc_ptr(ji,jk,jj),ps3d_inc_ptr(ji,1,jj)
     &           ,hu3d_trl_ptr(ji,jk,jj),zpres,statevectorg%vco%dhyb_m(jk))
!            ZEL = FOEFQL(hu3d_inc_ptr(ji,jk,jj),ps3d_inc_ptr(ji,1,jj)
!     &           ,hu3d_trl_ptr(ji,jk,jj),zpres,statevectorg%vco%db_m(jk))
*
*          TLM of the dewpoint temperature calculation
*
C          From Teten's relation
C
            ZTD=FOTW8(ZE)
            ZGAMMA=FODTW8(ZTD,ZE)
            ZTDL = ZGAMMA*ZEL
*
            pesinc(ji,jk,jj) = tt3d_inc_ptr(ji,jk,jj) - ZTDL
*
          enddo
        enddo
      enddo
*
      RETURN
      END
