!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE oda_maskzp(CDFAM)
      use modmask, only : lmaskzp, lmask
      use obsSpaceData_mod
#if defined (DOC)
*
*Purpose : Defines a mask of assimilated data
*
*Author  : S. Pellerin, ARMA, January 2009
*          Based on selection made in observation operator as written by
*          J. St-James, CMDA/SMC in July 2003
*
#endif
      IMPLICIT NONE
      CHARACTER *2 CDFAM
*implicits
#include "comdimo.cdk"


#include "cvcord.cdk"
*
      INTEGER IPB,IPT,IDBURP
      INTEGER IOBS,IPOS,IK,IBEGIN,ILAST,ILASTOB,IBEGINOB,IDATEND,NQCVAR
      INTEGER J,JDATA,IDATA,ITYP,ISTYP,JJ,JO
      REAL*8 ZVAR,ZOER,ZDA1,ZDA2,ZCON,ZINC,ZPHI,ZJON,ZGAMI,ZSLEV,ZQCARG
      REAL*8 ZWB,ZWT, ZEXP, ZGAMMA,ZLTV,ZTVG,ZPPOST
      REAL*8 ZLEV,ZPT,ZPB,ZLAT,ZLON,ZTORAD,ZDENO,ZCON1,ZCON2,ZCON3
      REAL*8 DLSUM
      LOGICAL LLOK, LLPRINT, LLUV,LLNOXTR
C
      DO J = 1,NFILES
        IF ( (CFAMTYP(J) .EQ. CDFAM) .AND.( NBEGINTYP(J) .GT. 0)) THEN
          IBEGIN=NBEGINTYP(J)
          ILAST=NENDTYP(J)

          IBEGINOB = obsSpaceData%MOBDATA(NCMOBS,IBEGIN)
          ILASTOB  = obsSpaceData%MOBDATA(NCMOBS,ILAST)
          DO JO = IBEGINOB, ILASTOB
            IDATA   = obsSpaceData%MOBHDR(NCMRLN,JO)
            IDATEND = obsSpaceData%MOBHDR(NCMNLV,JO) + IDATA - 1
            DO JDATA=IDATA,IDATEND
              LLOK=(obsSpaceData%MOBDATA(NCMASS,JDATA) .EQ. 1)
     &             .AND. (obsSpaceData%MOBDATA(NCMXTR,JDATA) .EQ. 0)
     &             .AND. (obsSpaceData%MOBDATA(NCMVCO,JDATA) .EQ. 1)
              IF ( LLOK ) THEN
                lmaskzp(jdata) = .true.
              ENDIF
            END DO
          enddo
        endif
      END DO
      lmask = lmask .or. lmaskzp
      RETURN
      END
