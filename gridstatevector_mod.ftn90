!--------------------------------------------------------------------------
! MODULE gridStateVector (The grid-point state vector and related information.  prefix="gsv")
!
! Purpose: 
!
! Type definitions:
!    struct_gsv
!
! Subroutines:
!    gsv_setup (public)
!    gsv_allocate
!    gsv_deallocate
!    gsv_zero
!
! Dependencies:
!    none
!--------------------------------------------------------------------------
MODULE gridStateVector

  implicit none
  save
  private

  public              :: gsv_allocate, gsv_deallocate, gsv_zero, gsv_3dto4d, gsv_3dto4dAdj, struct_gsv

  type struct_gsv
    real*8,pointer :: gd(:,:,:,:)
    real*8,pointer :: gd3d(:,:,:)
    real*8,pointer :: uu(:,:,:,:)
    real*8,pointer :: vv(:,:,:,:)
    real*8,pointer :: tt(:,:,:,:)
    real*8,pointer :: hu(:,:,:,:)
    real*8,pointer :: oz(:,:,:,:)
    real*8,pointer :: tr(:,:,:,:)
    real*8,pointer :: gz(:,:,:,:)
    real*8,pointer :: ps(:,:,:,:)
    real*8,pointer :: tg(:,:,:,:)
    integer        :: ni,nj,nk,nlev,nt,anltime
    logical        :: allocated=.false.
  end type struct_gsv  

CONTAINS

  SUBROUTINE GSV_allocate(statevector,ni,nj,nk,nlev,nt)
    implicit none

    type(struct_gsv) :: statevector
    integer          :: ni,nj,nk,nlev,nt
    integer          :: ierr,ishift

    statevector%ni=ni
    statevector%nj=nj
    statevector%nk=nk
    statevector%nlev=nlev
    statevector%nt=nt
    statevector%anltime=nint((real(nt)+1.0)/2.0)

    write(*,*) 'gsv_allocate: nt,anltime=',statevector%nt,statevector%anltime

    if (statevector%allocated)then
      write(*,*) 'gridStateVector already allocated! Deallocating first.'
      deallocate(statevector%gd,stat=ierr)
      statevector%allocated=.false.
      if(ierr.eq.0) then
        write(*,*) 'gridStateVector checked and correct. IERR =',ierr
      else
        write(*,*) 'Problem detected in gridStateVector. IERR =',ierr
      endif
      call flush(6)
    end if

    allocate(statevector%gd(ni,nk,nj,nt),stat=ierr)
    if(ierr.ne.0) then
      write(*,*) 'gridStateVector: Problem allocating memory! id=1',ierr
      call flush(6)
    endif
    statevector%allocated=.true.

    statevector%gd3d => statevector%gd(:,:,:,statevector%anltime)

    ishift=0
    statevector%uu => statevector%gd(1:ni,(ishift+1):(ishift+nlev),1:nj,1:nt)
    ishift=ishift+nlev
    statevector%vv => statevector%gd(1:ni,(ishift+1):(ishift+nlev),1:nj,1:nt)
    ishift=ishift+nlev
    statevector%tt => statevector%gd(1:ni,(ishift+1):(ishift+nlev),1:nj,1:nt)
    ishift=ishift+nlev
    statevector%hu => statevector%gd(1:ni,(ishift+1):(ishift+nlev),1:nj,1:nt)
    ishift=ishift+nlev
    statevector%ps => statevector%gd(1:ni,(ishift+1):(ishift+1),1:nj,1:nt)
    ishift=ishift+1
    statevector%tg => statevector%gd(1:ni,(ishift+1):(ishift+1),1:nj,1:nt)

  END SUBROUTINE GSV_allocate


  SUBROUTINE GSV_zero(statevector)
    implicit none

    type(struct_gsv) :: statevector

    if(.not.statevector%allocated) then
      write(*,*) 'gridStateVector not yet allocated! Aborting.'
      call qqexit(1)
    endif

    statevector%gd(1:statevector%ni,1:statevector%nk,1:statevector%nj,1:statevector%nt)=0.0d0
 
  END SUBROUTINE GSV_zero


  SUBROUTINE GSV_3dto4d(statevector)
    implicit none

    type(struct_gsv) :: statevector
    integer          :: jstep

    if(.not.statevector%allocated) then
      write(*,*) 'gridStateVector not yet allocated! Aborting.'
      call qqexit(1)
    endif

    if(statevector%nt.eq.1) return

    do jstep=1,statevector%nt
      if(jstep.ne.statevector%anltime) then
        statevector%gd(:,:,:,jstep)= statevector%gd3d(:,:,:)
      endif
    enddo

  END SUBROUTINE GSV_3dto4d


  SUBROUTINE GSV_3dto4dAdj(statevector)
    implicit none

    type(struct_gsv) :: statevector
    integer          :: jstep

    if(.not.statevector%allocated) then
      write(*,*) 'gridStateVector not yet allocated! Aborting.'
      call qqexit(1)
    endif

    if(statevector%nt.eq.1) return

    do jstep=1,statevector%nt
      if(jstep.ne.statevector%anltime) then
        statevector%gd3d(:,:,:)= statevector%gd3d(:,:,:) +   &
                                 statevector%gd(:,:,:,jstep)
      endif
    enddo

  END SUBROUTINE GSV_3dto4dAdj


  SUBROUTINE GSV_deallocate(statevector)
    implicit none

    type(struct_gsv) :: statevector
    integer        :: ierr

    if(.not.statevector%allocated) then
      write(*,*) 'gridStateVector not yet allocated! Aborting.'
      call qqexit(1)
    endif

    if (statevector%allocated) then
      deallocate(statevector%gd,stat=ierr)
      nullify(statevector%gd)
      statevector%allocated=.false.
      if(ierr.eq.0) then
        write(*,*) 'gridStateVector checked and correct. IERR =',ierr
      else
        write(*,*) 'Problem detected in gridStateVector. IERR =',ierr
      endif
    end if

  END SUBROUTINE GSV_deallocate

END MODULE gridStateVector
