!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE oda_qcv
      use modmask, only : lmask,lmaskgo,lmaskro
      use obsSpaceData_mod
      use bufr
      IMPLICIT NONE
*
*Purpose : 1) Modify Jo [ROBDATA8(NCM_OMI,*)] according to
*             Andersson and Jarvinen 1999, Variational quality control,
*             Q.J.R., 125, pp. 697-722.
*          2) Save the values of (1-Wqc) in ROBDATA8(NCM_OMN,*)
*             for gradient factorization and postalt flag criterion.
*
*Author  : S. Pellerin, ARMA, January 2009
*          Generalisation of QCVAR originally embeded in observation
*          operators from P. Koclas, J. Halle and J. St-James
*
*Revisions :
*
#include "comdimo.cdk"
#include "comstate.cdk"
*
      integer :: jdata,istyp,jj,jo,ityp,idata
      real*8 :: zgami,zjon,zqcarg,zppost,zlev,zslev
      logical :: lluv,llmask(obsSpaceData%numobs_recorded)
C
      llmask = lmask .neqv. lmaskgo  ! Exclusion of GOES QCVAR
      llmask = llmask .neqv. lmaskro ! Exclusion of GPSRO QCVAR
      DO JDATA=1,obsSpaceData%numobs_recorded
        IF (llmask(jdata)) THEN
          jo = obs_elem_i(obsSpaceData,'OBS ',jdata)
          idata = obs_elem_i(obsSpaceData,'RLN ',JO)
          ZLEV = obs_elem_r8(obsSpaceData,'PPP ',JDATA)
          zgami = obsSpaceData%robdata(NCM_POB,jdata)
          ITYP = obs_elem_i(obsSpaceData,'VNM ',JDATA)
          LLUV = ((ITYP .EQ. BUFR_NEUU .OR. ITYP .EQ. BUFR_NEUS) .AND.
     &         NMVOEXIST(NOUU) .EQ. 1) .OR. ((ITYP .EQ. BUFR_NEVV .OR.
     &         ITYP .EQ. BUFR_NEVS).AND. NMVOEXIST(NOVV) .EQ. 1)
          IF (LLUV) THEN
            IF (ITYP .EQ. BUFR_NEUU .OR. ITYP .EQ. BUFR_NEUS)THEN
C
C  In order to calculate the contribution to Jo from a wind, the o-a
C  must be available for both u and v components. Hence, loop over only
C  data for which o-a has already been calculated
C
              DO JJ=IDATA, JDATA
                ISTYP = obs_elem_i(obsSpaceData,'VNM ',JJ)
                ZSLEV = obs_elem_r8(obsSpaceData,'PPP ',JJ)
                IF ((ISTYP .EQ. BUFR_NEVV
     1               .OR. ISTYP .EQ. BUFR_NEVS) .AND.
     2               ZSLEV .EQ. ZLEV) THEN
                  ZJON=obs_elem_r8(obsSpaceData,'OMI ',JDATA)+
     &                 obs_elem_r8(obsSpaceData,'OMI ',JJ)
                  ZQCARG = ZGAMI + EXP(-1.0*ZJON)
                  ZPPOST = ZGAMI/ZQCARG
C
C     Store the value of o-a multiplied by one minus the posterior
C     probability of gross error (needed for the adjoint calculations)
C
                  obsSpaceData%ROBDATA8(NCM_OMN,JDATA) = ZPPOST
                  obsSpaceData%ROBDATA8(NCM_OMN,JJ) = ZPPOST

                  obsSpaceData%ROBDATA8(NCM_OMI,JDATA)=-LOG(ZQCARG/(ZGAMI+1.))
     &                 /2.
                  obsSpaceData%ROBDATA8(NCM_OMI,JJ) = -LOG(ZQCARG/(ZGAMI+1.))
     &                 /2.
C
C     Contribution of both u and v added to the cost function at the
C     same time (see tech. note by Andersson and Jarvinen)
C
                ENDIF
              ENDDO
            ELSE
              DO JJ=IDATA, JDATA
                ISTYP = obs_elem_i(obsSpaceData,'VNM ',JJ)
                ZSLEV = obs_elem_r8(obsSpaceData,'PPP ',JJ)
                IF ((ISTYP .EQ. BUFR_NEUU .OR.
     1               ISTYP .EQ. BUFR_NEUS) .AND.
     2               ZSLEV .EQ. ZLEV) THEN
                  ZJON=obs_elem_r8(obsSpaceData,'OMI ',JDATA)+
     &                 obs_elem_r8(obsSpaceData,'OMI ',JJ)
                  ZQCARG = ZGAMI + EXP(-1.0*ZJON)
                  ZPPOST = ZGAMI/ZQCARG
                  obsSpaceData%ROBDATA8(NCM_OMN,JDATA) = ZPPOST
                  obsSpaceData%ROBDATA8(NCM_OMN,JJ) = ZPPOST
                  obsSpaceData%ROBDATA8(NCM_OMI,JDATA)=-LOG(ZQCARG/(ZGAMI+1.))
     &                 /2.
                  obsSpaceData%ROBDATA8(NCM_OMI,JJ) = -LOG(ZQCARG/(ZGAMI+1.))
     &                 /2.
                ENDIF
              enddo
            endif
          else
            zjon = obs_elem_r8(obsSpaceData,'OMI ',jdata)
            zqcarg = zgami + exp(-1.0*zjon)
            zppost = zgami/zqcarg
            obsSpaceData%robdata8(NCM_OMN,jdata) = zppost
            obsSpaceData%ROBDATA8(NCM_OMI,JDATA)= - log(zqcarg/(zgami+1.))
          endif
        endif
      enddo

      RETURN
      END
