!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE DHUPPP(CDFAM,lcolumnhr,lobsSpaceData)
#if defined (DOC)
*
***s/r DHUPPP  - Computation of the residuals of the LQ observations
*                FOR UPPER AIR DATAFILES
*
*Author  : D. ANSELMO (MRB/ARMA) October 2004
*          (modified copy of DOBSPPP.ftn)
*Revision:
*
**    Purpose: - Computation of the LQ innovations.
*
*
*Arguments
*     CDFAM: FAMILY OF OBSERVATION
*
#endif
      use obsSpaceData_mod
      use columnData_mod
      use bufr
      IMPLICIT NONE
      CHARACTER(len=*) :: CDFAM
*implicits
#include "comfilt.cdk"
#include "cparbrp.cdk"
*
      type(struct_columnData) :: lcolumnhr
      type(struct_obs) :: lobsSpaceData
      INTEGER INDEX_HEADER,IK,IPRES
      INTEGER INDEX_BODY
      REAL*8 ZVAR,ZOER
      REAL*8 ZWB,ZWT
      REAL*8 ZLEV,ZPT,ZPB
      LOGICAL LLPRINT
C
      LLPRINT = .FALSE.
C
      IF (LLPRINT) print*,' ---dhuppp----------------'

      ! loop over all header indices of the CDFAM family
      call obs_set_current_header_list(lobsSpaceData,CDFAM)
      HEADER: do
         index_header = obs_getHeaderIndex(lobsSpaceData)
         if (index_header < 0) exit HEADER
C
C*    1. Computation of (HX - Z)/SIGMA
C     .  -----------------------------
C
C     Process all data within the domain of the model
C     Exclude levels above RLIMLVHU as it is done with T-Td in s/r suprep
C
         ! loop over all body indices for this index_header
         call obs_set_current_body_list(lobsSpaceData, index_header)
         BODY: do 
            index_body = obs_getBodyIndex(lobsSpaceData)
            if (index_body < 0) exit BODY

            IF ( obs_elem_i(lobsSpaceData,'VNM ',INDEX_BODY) .EQ. BUFR_NEHU  .AND.
     &           obs_elem_i(lobsSpaceData,'XTR ',INDEX_BODY) .EQ. 0     .AND.
     &           obs_elem_i(lobsSpaceData,'VCO ',INDEX_BODY) .EQ. 2    ) THEN
              IPRES= NINT(obs_elem_r(lobsSpaceData,'PPP ',INDEX_BODY))
              call obs_set_r(lobsSpaceData,'OMA ',INDEX_BODY, PPMIS)
              IF ( IPRES .GE. NINT(RLIMLVHU*100) ) THEN
                ZVAR = obs_elem_r(lobsSpaceData,'VAR ',INDEX_BODY)
                ZOER = obs_elem_r(lobsSpaceData,'OER ',INDEX_BODY)
                ZLEV = obs_elem_r(lobsSpaceData,'PPP ',INDEX_BODY)
                IK   = obs_elem_i(lobsSpaceData,'LYR ',INDEX_BODY)
                ZPT  = col_getPressure(LCOLUMNHR,IK  ,INDEX_HEADER,'TH')
                ZPB  = col_getPressure(LCOLUMNHR,IK+1,INDEX_HEADER,'TH')
                ZWB  = LOG(ZLEV/ZPT)/LOG(ZPB/ZPT)
                ZWT  = 1. - ZWB
C
                call obs_set_r(lobsSpaceData,'OMA ',INDEX_BODY, 
     +                        ( ZWB*col_getElem(lcolumnhr,IK+1,INDEX_HEADER,'HU')
     +                        + ZWT*col_getElem(lcolumnhr,IK  ,INDEX_HEADER,'HU') - ZVAR ) / ZOER)

                IF ( LLPRINT ) THEN
                  write(*,*)' -------------------------'
                  write(*,*)'   index_body  = ',INDEX_BODY
                  write(*,*)'   index_header   = ',INDEX_HEADER
                  write(*,*)'   zlev   = ',ZLEV
                  write(*,*)'   ik     = ',IK
                  write(*,*)'   zvar   = ',ZVAR
                  write(*,*)'   zoer   = ',ZOER
                  write(*,*)'   col_getElem(lcolumnhr,ik  ,index_header,HU) = ',col_getElem(lcolumnhr,IK  ,INDEX_HEADER,'HU')
                  write(*,*)'   col_getElem(lcolumnhr,ik+1,index_header,HU) = ',col_getElem(lcolumnhr,IK+1,INDEX_HEADER,'HU')
                  write(*,*)'   O-P    = ',-obs_elem_r(lobsSpaceData,'OMA ',INDEX_BODY)*ZOER
                  write(*,*)' -------------------------'
                ENDIF

              ENDIF
            ENDIF

         ENDDO BODY

      ENDDO HEADER
C--------------------------------------------------------------------
*
      RETURN
      END
