!--------------------------------------- LICENCE BEGIN -----------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------

module codePrecision_mod
  ! MODULE codePrecision_mod (prefix='pre' category='8. Global constants and interfaces')
  !
  !:Purpose: A module to specify the precision, mostly for floating
  !          point variables
  !
  use mpi
  implicit none
  save
  public

  !
  ! Precision for columns in obsSpaceData - default is real8
  !
#if !defined(CODEPRECISION_OBS_REAL_SINGLE) && !defined(CODEPRECISION_OBS_REAL_DOUBLE)
#define CODEPRECISION_OBS_REAL_DOUBLE
#endif

#ifdef CODEPRECISION_OBS_REAL_DOUBLE
  integer, parameter :: pre_obsReal    = selected_real_kind(15)
  character(len=20)  :: pre_obsMpiReal ="mpi_real8"
#endif

#ifdef CODEPRECISION_OBS_REAL_SINGLE
  integer, parameter :: pre_obsReal = selected_real_kind(6)
  character(len=20)  :: pre_obsMpiReal="mpi_real4"
#endif

  !
  ! Precision for calculation of analysis increment in variational analysis - default is real8
  !
#if !defined(CODEPRECISION_INCR_REAL_SINGLE) && !defined(CODEPRECISION_INCR_REAL_DOUBLE)
#define CODEPRECISION_INCR_REAL_DOUBLE
#endif

#ifdef CODEPRECISION_INCR_REAL_DOUBLE
  integer, parameter :: pre_incrReal = selected_real_kind(15)
#endif

#ifdef CODEPRECISION_INCR_REAL_SINGLE
  integer, parameter :: pre_incrReal = selected_real_kind(6)
#endif

  !
  ! Precision for mpi transposes in (global) spectral transform - default is real8
  !
#if !defined(CODEPRECISION_SPECTRANS_REAL_SINGLE) && !defined(CODEPRECISION_SPECTRANS_REAL_DOUBLE)
#define CODEPRECISION_SPECTRANS_REAL_DOUBLE
#endif

#ifdef CODEPRECISION_SPECTRANS_REAL_DOUBLE
  integer, parameter :: pre_specTransReal    = selected_real_kind(15)
  integer, parameter :: pre_specTransMpiType = MPI_REAL8
  character(len=20)  :: pre_specTransMpiReal ="mpi_real8"
#endif

#ifdef CODEPRECISION_SPECTRANS_REAL_SINGLE
  integer, parameter :: pre_specTransReal    = selected_real_kind(6)
  integer, parameter :: pre_specTransMpiType = MPI_REAL4
  character(len=20)  :: pre_specTransMpiReal ="mpi_real4"
#endif

contains

  subroutine pre_printPrecisions
    !
    !:Purpose: To print precision parameters in the listing.
    !
    implicit none

    write(*,*) 
    write(*,*) " <<<<<< Code precision parameters >>>>>>"
    write(*,"(A36, I2)")  "         pre_obsReal= ", pre_obsReal
    write(*,"(A36, A20)") "      pre_obsMpiReal= ", pre_obsMpiReal
    write(*,"(A36, I2)")  "        pre_incrReal= ", pre_incrReal
    write(*,"(A36, I2)")  "   pre_specTransReal= ", pre_specTransReal
    write(*,"(A36, I2)")  "pre_specTransMpiType= ", pre_specTransMpiType
    write(*,"(A36, A20)") "pre_specTransMpiReal= ", pre_specTransMpiReal
    write(*,*) 

  end subroutine pre_printPrecisions

end module codePrecision_mod
