#!/bin/bash

## Ce script sert a publier les packages SSM crees par les script 'bh-*.py'
## On se base sur la documentation presente sur le wiki
##    https://wiki.cmc.ec.gc.ca/wiki/Assimilation/SSM

set -e

SECONDS=0

getArg () {
    set -e
    if [ $# -le 1 ]; then
        echo "ssm/build_packages: The option '$1' expects an argument" >&2
        exit 1
    fi
    if [[ "$2" == -* ]]; then
        echo "ssm/build_packages: The option '$1' expects an argument but have '$2'" >&2
        exit 1
    fi
    echo $2
} ## End of function 'getArg'

compiled_programs=
ssmuser=
workdir=${PWD}

args=
while [ $# -gt 0 ]; do
    if [ "${1}" = --midas-abs ]; then
        midasabs=$(getArg $1 $2)
        shift
    elif [ "${1}" = --packages ]; then
        packages=$(getArg $1 $2)
        shift
    elif [ "${1}" = --user ]; then
        ssmuser=$(getArg $1 $2)
        shift
    elif [ "${1}" = --workdir ]; then
        workdir=$(getArg $1 $2)
        shift
    elif [ "${1}" = --frontend ]; then
        frontend=$(getArg $1 $2)
        shift
    elif [ "${1}" = --backend ]; then
        backend=$(getArg $1 $2)
        shift
    else
        args="${args} ${1}"
    fi
    shift
done

if [ -z "${midasabs}" ]; then
    echo "ssm/build_packages: You must provide a path for the MIDAS programs with '--midas-abs'" >&2
    exit 1
fi
if [ -z "${packages}" ]; then
    echo "ssm/build_packages: You must provide a path to put the SSM packages with '--packages'" >&2
    exit 1
fi
if [ -z "${frontend}" ]; then
    echo "ssm/build_packages: You must provide a frontend machine with '--frontend'" >&2
    exit 1
fi
if [ -z "${backend}" ]; then
    echo "ssm/build_packages: You must provide a backend machine with '--backend'" >&2
    exit 1
fi

if [ -n "${args}" ]; then
    set ${args}
fi

if [ $# -ge 1 ]; then
    BHSCRIPTS=$@
else
    BHSCRIPTS=$(/bin/ls bh-*.py)
fi

if [ -d "${packages}" ]; then
    echo "ssm/build_packages: The destination path '${packages}' already exists!" >&2
    exit 1
else
    echo "ssm/build_packages: Creating destination path '${packages}'"
    mkdir -p ${packages}
fi

toplevel=$(git rev-parse --show-toplevel)
MIDAS_REVISION=${MIDAS_REVISION:-$(${toplevel}/midas.version.sh)}

## If MIDAS_SOURCE is not yet defined we use the git repository itself.
## If this script is run from elsewhere, then we use the path to the GitLab project
if [ -z "${MIDAS_SOURCE}" ]; then
    MIDAS_SOURCE=$(${toplevel}/midas.version.sh) || true
    if [ -z "${MIDAS_SOURCE}" ]; then
        MIDAS_SOURCE=git@gitlab.science.gc.ca:atmospheric-data-assimilation/midas.git
    fi
fi

export BH_MAIL_RECIPIENTS=${BH_MAIL_RECIPIENTS:-ervig.lapalme@canada.ca}

## loading the BH scripts
. ssmuse-sh -x hpco/exp/bh-test/bh-1.2
export BH_PROFILE=eccc

platforms="ubuntu-18.04-skylake-64 sles-15-skylake-64-xc50 all"

for platform in ${platforms}; do
    ssmbuildhost=host:
    ssmhost=
    case "${platform}" in
	all)
	    compiler=
	    ;;
	ubuntu-18.04-skylake-64)
	    compiler=intel-19.0.3.199
	    ssmhost=${frontend}
	    ;;
	sles-15-skylake-64-xc50)
	    compiler=PrgEnv-intel-6.0.5
	    ssmhost=${backend}
	    ;;
    esac

    echo -n Working with MIDAS for platform ${platform}

    if [ -n "${compiler}" ]; then
	echo " with compiler ${compiler}"
	compiler_string=-${compiler}
    else
	compiler_string=
    fi

    other_bh_args="-v BH_MIDAS_ABS=${midasabs} -v MIDAS_VERSION=${MIDAS_REVISION} -v BH_MIDAS_TOP_LEVEL_DIR=$(git rev-parse --show-toplevel)"
    if [ -n "${ssmhost}" ]; then
	if [ "${ssmhost}" = local ]; then
	    other_bh_args="${other_bh_args} --local"
	else
	    other_bh_args="${other_bh_args} --host ${ssmhost}"
	fi
    fi

    ## Un package SSM ne peut contenir de caractere '_' dans le nom
    ## puisque cela interfere avec la separation des plateformes.
    ssmpackage_version=$(echo ${MIDAS_REVISION} | sed 's/_//g')
    ssmpkgname=midas${compiler_string}_${ssmpackage_version}_${platform}
    set -x
    ./${bhscript} -w ${workdir}/bh-midas-${platform}-$$ -p ${ssmbuildhost}${platform} \
      -v BH_PACKAGE_VERSION=${ssmpackage_version} \
      -v BH_PULL_SOURCE_GIT_BRANCH=${MIDAS_REVISION} \
      -v BH_PULL_SOURCE=${MIDAS_SOURCE} \
      -v BH_PACKAGE_NAMES=midas${compiler_string} \
      ${other_bh_args}
    set +x
    rm -rf ${workdir}/bh-midas-${platform}-$$

    ## check if the package contains a 'post-install' script
    postinstall_exists=true
    tar tf ${ssmpkgname}.ssm | grep -sq "/.ssm.d/post-install$" || postinstall_exists=false
    if [ "${postinstall_exists}" = true ]; then
        echo "ssm/build_packages: Warning! The SSM package ${PWD}/${ssmpkgname}.ssm contains a 'post-install' script !" >&2
    fi

    mv ${ssmpkgname}.ssm ${packages}
done

echo "ssm/build_packages: L'execution de ce script a pris ${SECONDS} secondes."
