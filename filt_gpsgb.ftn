!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE FILT_GPSGB(lobsSpaceData)
C
C**s/r FILT_GPSGB - Filter GPS observations for testing purposes
C
C
C Author  : S. Macpherson *ARMA February 2005
C    -------------------
C*    Purpose: Filters GPS observations for testing purposes
C
C Notes:
C  - called by PREPROC (if L1GPSOBS=.TRUE.)
C  - CGPSSTN in namelist (comgpsgb.cdk) is desired observation site name
C    for 1 obs case
C
      use MathPhysConstants_mod
      use obsSpaceData_mod
      use columnData_mod 
 
      IMPLICIT NONE
#include "comgpsgb.cdk"
C
      type(struct_obs) :: lobsSpaceData
      INTEGER INDEX_HEADER
      INTEGER IDATYP
      INTEGER INDEX_BODY
C
      LOGICAL LLFOUND, LLGP
C
      write(*,*)' '
      write(*,*)' *****************************************'
      write(*,*)' *    PREPROC PREPROC PREPROC PREPROC    *'
      write(*,*)' *          GB-GPS OBSERVATIONS          *'
      write(*,*)' *                                       *'
      write(*,*)' *     --- ONE OBSERVATION MODE ---      *'
      write(*,*)' *                                       *'
      write(*,*)' *****************************************'
      write(*,*)' ' 
      write(*,*)' CGPSSTN = ', CGPSSTN
      write(*,*)' '
C
      LLGP = .FALSE.
      LLFOUND = .FALSE.
C
      ! loop over all header indices of the 'GP' family
      call obs_set_current_header_list(lobsSpaceData,'GP')
      HEADER: do
        index_header = obs_getHeaderIndex(lobsSpaceData)
        if (index_header < 0) exit HEADER
C
        LLGP = .TRUE.
C
C     *Process only Ground-Based GPS data (codtyp 189)
C
        IDATYP = obs_elem_i(lobsSpaceData,'ITY ',INDEX_HEADER)
C
        IF ( IDATYP .EQ. 189 ) THEN
          IF (obs_elem_c(lobsSpaceData,'STID',INDEX_HEADER) .NE. CGPSSTN) THEN
            ! loop over all body indices for this index_header
            call obs_set_current_body_list(lobsSpaceData, index_header)
            BODY: do 
               index_body = obs_getBodyIndex(lobsSpaceData)
               if (index_body < 0) exit BODY
               call obs_set_i(lobsSpaceData,'ASS ',INDEX_BODY, 0)
            ENDDO BODY
          ELSE
            WRITE(*,'(A24,1X,A9)') ' FILT_GPSGB: 1OBS STATION =', 
     +         obs_elem_c(lobsSpaceData,'STID',INDEX_HEADER)
            LLFOUND = .TRUE.
          ENDIF
        ENDIF
C
      ENDDO HEADER
C
C     ABORT IF THERE IS NO DATA TO BE ASSIMILATED
      IF ( LLGP .AND. (.NOT. LLFOUND) ) THEN
        WRITE(*,'(A24,1X,A9)') ' FILT_GPSGB: ONEOBS SITE =', CGPSSTN 
        call abort3d(6,'FILT_GPSGB: ABORT! ONEOBS GPS SITE NOT FOUND')
      ENDIF
      IF ( .NOT. LLGP ) THEN
        call abort3d(6,
     +  'FILT_GPSGB: GB-GPS ONEOBS OPTION SELECTED BUT NO GP DATA IN CMA!')
      ENDIF
c
      RETURN
      END
