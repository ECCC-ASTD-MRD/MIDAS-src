!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      subroutine uvwi2uv(statevector)
*
#if defined (DOC)
*
*** s/r uvwi2uv: conversion of wind images to physical winds
*     (Remark: this subroutine is self-adjoint)
*
*     Author  : P. GAUTHIER *ARMA/MSC July 2002
*
* Revision:
*     L. Fillion - ARMA/MSC - 6 Jan 05.
*        : Allow Limited-Area option
*
*     .         -------------------------------
#endif
      use mpivar_mod
      use gridStateVector_mod
      use gaussGrid_mod
      implicit none
      type(struct_gsv) :: statevector
*
* Local variables
*
      integer ji,jj,jk,jstep
      integer jlev,jlat,jlon,lat1,lat2,nlev
      real*8, pointer :: uu_ptr(:,:,:,:),vv_ptr(:,:,:,:)

      uu_ptr => gsv_getField(statevector,'UU')
      vv_ptr => gsv_getField(statevector,'VV')

      lat1=statevector%myLatBeg
      lat2=statevector%myLatEnd
      nlev = gsv_getNumLev(statevector)

!$OMP PARALLEL
!$OMP DO PRIVATE (jlat,jstep,jlev,jlon)
      do jlat = lat1, lat2
        do jstep=1, statevector%numStep
          do jlev = 1, nlev
            do jlon = 1, statevector%ni
              uu_ptr(jlon,jlev,jlat,jstep) = gaus_conphy(jlat) * uu_ptr(jlon,jlev,jlat,jstep)
              vv_ptr(jlon,jlev,jlat,jstep) = gaus_conphy(jlat) * vv_ptr(jlon,jlev,jlat,jstep)
            enddo
          enddo
        enddo
      enddo
!$OMP END DO
!$OMP END PARALLEL

      RETURN
      END SUBROUTINE uvwi2uv
