!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE oda_qcvad(lobsSpaceData)
      use obsSpaceData_mod
*
*Purpose : Factorizes Grad(Jo) according to Andersson and Jarvinen
*          1999, Variational quality control, Q.J.R., 125,
*          pp. 697-722.
*          It uses the value of (1-Wqc) saved in OBS_QCV
*          in oda_qcv.ftn
*
*Author  : S. Pellerin, ARMA, January 2009
*          Generalisation of QCVAR originally embeded in adjoint of
*          observation operators from P. Koclas, J. Halle and
*          J. St-James
*
      use rmatrix_mod ,only : rmat_lnondiagr
      implicit none
*
      type(struct_obs) :: lobsSpaceData
      integer :: index_body
      logical :: includeFlag

      do index_body=1,obs_numbody(lobsSpaceData)
        includeFlag = (obs_bodyElem_i(lobsSpaceData,OBS_ASS,index_body).eq.1) 
     +          .and. (obs_getFamily(lobsSpaceData,bodyIndex=index_body).ne.'RO')
C pas de qcvar pour les radiances en mode matrice R non diagonale
        if (rmat_lnondiagr) includeFlag = 
     +    includeFlag .and.
     +    (obs_getFamily(lobsSpaceData,bodyIndex=index_body).ne.'TO')

        if (includeFlag) then
          call obs_bodySet_r(lobsSpaceData,OBS_WORK,index_body, 
     +           obs_bodyElem_r(lobsSpaceData,OBS_WORK,index_body)
     +           *(1.d0 - obs_bodyElem_r(lobsSpaceData,OBS_QCV,index_body)))
        endif
      enddo

      end subroutine oda_qcvad
