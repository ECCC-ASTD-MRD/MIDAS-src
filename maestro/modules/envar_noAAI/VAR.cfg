
if [ -f ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/precon ]; then
    precon=${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/precon
else
    precon="<no value>"
fi

if [ -f ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/sfc4hyperir ]; then
    sfc4hyperir=${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/sfc4hyperir
else
    sfc4hyperir="<no value>"
fi

if [ -f ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/sfc4hyperir_newalb ]; then
    sfc4hyperir_newalb=${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/sfc4hyperir_newalb
else
    sfc4hyperir_newalb="<no value>"
fi

if [ -d ${SEQ_WORKBASE}/${SEQ_CONTAINER}/interpEnsTrials/output ]; then
    ens_inputs=${SEQ_WORKBASE}/${SEQ_CONTAINER}/interpEnsTrials/output
else
    ens_inputs="<no value>"
fi

if [ -d ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getEnsTrials/output ]; then
    enstrials_nointerp=${SEQ_WORKBASE}/${SEQ_CONTAINER}/getEnsTrials/output
else
    enstrials_nointerp="<no value>"
fi

if [ "${ENVAR_3dvar_abs}" = release ]; then
    varabs=$(which oavar.Abs || which 3dvar_AIX-powerpc7.Abs)
elif [ "${ENVAR_3dvar_abs}" = release/nompi ]; then
    varabs=$(which oavar_nompi.Abs || 3dvar_AIX-powerpc7_NOMPI.Abs)
else
    varabs=${ENVAR_3dvar_abs}
fi

if [[ "${ENVAR_analysis_grid}" != /* ]]; then
    if [[ "${ENVAR_analysis_grid}" != *:* ]]; then
	ENVAR_analysis_grid=${OAVAR_DATA}/data/analysis_grid_prototypes/${ENVAR_analysis_grid}
    fi	
fi

if [[ "${ENVAR_observations_splitobs}" = 'yes' ]]; then
    if [[ "${ENVAR_mode}" = O-P ]]; then
	ENVAR_observations_splitobs=reflex
    else
	ENVAR_observations_splitobs=$(which splitobs.Abs || which splitobs_${BASE_ARCH}.Abs)
    fi
elif [[ "${ENVAR_observations_splitobs}" = 'no' ]]; then
    ENVAR_observations_splitobs='<no value>'
    ENVAR_observations_splitobs_grid='<no value>'
elif [[ "${ENVAR_observations_splitobs}" = '<no value>' ]]; then
    ENVAR_observations_splitobs_grid='<no value>'
fi

if [ "${ENVAR_observations_splitobs}" = '<no value>' ]; then
    reunirobs_abs='<no value>'
else
    reunirobs_abs=${ENVAR_observations_reunir:-$(which reunir_obs.Abs || which reunir_obs_${BASE_ARCH}.Abs)}
fi

if [[ "${ENVAR_observations_splitobs_grid}" != '<no value>' ]]; then
    if [[ "${ENVAR_observations_splitobs_grid}" != /* ]]; then
	if [[ "${ENVAR_observations_splitobs_grid}" != *:* ]]; then
	    ENVAR_observations_splitobs_grid=${OAVAR_DATA}/data/analysis_grid_prototypes/${ENVAR_observations_splitobs_grid}
	fi
    fi
fi

if [ "${ENVAR_enstrials_interpolation_in_VAR}" = yes ]; then
    if [ "${ENVAR_enstrials_interpolation}" = yes ]; then
	if [ -n "$(which oavar.interpEnsTrials_driver.ksh || true)" ]; then
	    ENVAR_enstrials_interpolation=oavar.interpEnsTrials_driver.ksh
	else
	    echo "Not ensemble trials interpolation script have been found!!!"
	    exit 1
	fi
    fi
    write_subdomains=${ENVAR_ens_subdomains_program:-$(which write_subdomains.Abs || which write_subdomains_${BASE_ARCH}.Abs)}
else
    write_subdomains='<no value>'
    ENVAR_enstrials_interpolation='<no value>'
    ENVAR_enstrials_vertical_prototype='<no value>'
fi

oavar_monitor_rebm=$(which oavar.monitor.Abs || echo '<no value>')

#############################################################################
# <input>
#    observations    ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getObservations/output
#    trial.model/    ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getTrials/output/*${__ENVAR_DATE_m6}_*
#    ensemble        ${ens_inputs}
#    allStats        ${SEQ_WORKBASE}/${SEQ_CONTAINER}/getStats/output/*
#    precon          ${precon}
#    sfc4hyperir        ${sfc4hyperir}
#    sfc4hyperir_newalb ${sfc4hyperir_newalb}
#    namelist        ${ENVAR_namelist}
#    analysisgrid    ${ENVAR_analysis_grid}
#    split_grid      ${ENVAR_observations_splitobs_grid}
#    enstrials       ${enstrials_nointerp}
#    vertical_prototype ${ENVAR_enstrials_vertical_prototype}
# </input>
#############################################################################
# <executables>
#    manip_script    ${ENVAR_manip_script}
#    oavar.Abs       ${varabs}
#    oavar.launch    oavar.launch
#    oavar.mpirun    oavar.mpirun
#    splitobs        ${ENVAR_observations_splitobs}
#    reunir_obs      ${reunirobs_abs}
#    remote_copy     ${ENVAR_TRANSFER_COMMAND}
#    r.tripotenml    r.tripotenml
##
#    interp_ens          ${ENVAR_enstrials_interpolation}
#    write_subdomains    ${write_subdomains}
#    oavar.monitor       ${oavar_monitor_rebm}
##
#    r.run_in_parallel   r.run_in_parallel
#    readlink            r.read_link
#    editbrp             editbrp
#    editfst             editfst
#    reflex              reflex
#    true_path           true_path
# </executables>
#############################################################################
# <output>
##    rebm
##    brp*  (all the postalt files)     
##    pm1q  (if it exists)
# </output>
