#!/bin/ksh

cp ${UnitTest_pgm_run_namelist} flnml
cp ${TASK_BIN}/pgm .
cp -r ${TASK_INPUT}/inputs/* .

for __envvar__ in ${UnitTest_pgm_run_environment_variables}; do
    eval "export ${__envvar__}"
done
unset __envvar__

cat << EOF > ptopo_nml
 &ptopo
  npex=${SEQ_NPEX}
  npey=${SEQ_NPEY}
/
EOF

which r.run_in_parallel

if [ "${UnitTest_pgm_run_debug}" = ddt ]; then
    if [[ "${ORDENV_PLAT}" = sles-*xc40 ]]; then
        run_in_parallel_extra_args=-ddt
        RUN_PGM=./pgm
    else
        cat > run.sh <<EOF
#!/bin/ksh

/fs/home/fs1/ords/ssc/hpco/mib002/allinea/forge/bin/ddt-client --ddtsessionfile ${HOME}/.allinea/session/eccc1-ppp2-1 ./pgm
EOF
        RUN_PGM=./run.sh
    fi
elif [ "${UnitTest_pgm_run_debug}" = gdb ]; then
    cat > run.sh <<EOF
#!/bin/ksh
gdb -ex run -ex where ./pgm
EOF
    RUN_PGM=./run.sh
elif [ "${UnitTest_pgm_run_debug}" = no ]; then
    RUN_PGM=./pgm
else
    echo "The value of 'UnitTest_pgm_run_debug=${UnitTest_pgm_run_debug}' is not 'ddt', 'gdb' or 'no' so we will use 'no'."
    RUN_PGM=./pgm
fi

[ ! -x "${RUN_PGM}" ] && chmod u+x ${RUN_PGM}

pgmpath=$(${TASK_BIN}/read_link ${TASK_BIN}/pgm)
${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s infox -m "Launching ${pgmpath}"

r.run_in_parallel -pgm ${RUN_PGM} -npex ${SEQ_NPEX} -npey ${SEQ_NPEY} -processorder -tag -nocleanup -verbose -tmpdir mpitmpdir ${run_in_parallel_extra_args}

## remove inputs
for file in ${TASK_INPUT}/inputs/*; do
    bfile=$(basename ${file})
    rm -r ${bfile}
done

## remove other files created by the execution
rm -f flnml pgm ptopo_nml
rm -r mpitmpdir

## put all the rest in 'output'
mv * ${TASK_OUTPUT}

