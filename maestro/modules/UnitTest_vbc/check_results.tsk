#!/bin/ksh

NOT_VALIDATING=""

if [ "${EC_ARCH}" = AIX-powerpc7 ]; then
    diff_options='-h'
elif [ "${EC_ARCH}" = Linux_x86-64 ]; then
    diff_options='--speed-large-files'
else
    echo "The plateform 'EC_ARCH=${EC_ARCH}' is not supported"
fi

function check_result {
    set -ex

    if [ $# -eq 2 ]; then
	file=$1
	file2=../input/${file}
	method=$2
    else
	file=$1
	file2=$2
	method=$3
    fi

    not_validating=""

    ${TASK_BIN}/cmcarc -f ${SHORT_DATE}.ca -x "${file}" -v
    
    if [ ! -f "${file}" ]; then
	$SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "File ${file} not in archive!"
	exit 1
    fi
    if [ ! -f "${file2}" ]; then
	$SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "${file2} not available!"
	exit 1
    fi

    if [ "${method}" = fstcomp ]; then
	${TASK_BIN}/fstcomp -ne -a ${file} -b ${file2} | tee fstcomp.list
	cat fstcomp.list | grep -vE '^   \*|^1|^c_fstopl option REDUCTION32|^ Debug TG= T| SONT EGAUX$' | grep -v "^  NOM    ETIKET        IP1           IP2 IP3 E-REL-MAX  E-REL-MOY    VAR-A      C-COR        MOY-A        BIAIS      E-M
AX      E-MOY" | grep -v "^  \*\*   SKIPPING RECORD \"!!\", CAN'T COMPARE  \*\*$" | awk 'NF>0 && $(NF-1)!="0.0000E+00"' | tee fstcomp.list.grep
	if [ -s fstcomp.list.grep ]; then
	    not_validating="yes"
	else
	    rm fstcomp.list fstcomp.list.grep

	    ${TASK_BIN}/fstcomp -ne -b ${file} -a ${file2} | tee fstcomp.list
	    cat fstcomp.list | grep -vE '^   \*|^1|^c_fstopl option REDUCTION32|^ Debug TG= T| SONT EGAUX$' | grep -v "^  NOM    ETIKET        IP1           IP2 IP3 E-REL-MAX  E-REL-MOY    VAR-A      C-COR        MOY-A        BIAIS      E-M
AX      E-MOY" | grep -v "^  \*\*   SKIPPING RECORD \"!!\", CAN'T COMPARE  \*\*$" | awk 'NF>0 && $(NF-1)!="0.0000E+00"' | tee fstcomp.list.grep
	    if [ -s fstcomp.list.grep ]; then
		not_validating="yes"
	    fi
	    rm fstcomp.list fstcomp.list.grep
	fi
    elif [ "${method}" = cmp ]; then
	cmp ${file} ${file2} || not_validating="yes"
    elif [ "${method}" = diff ]; then
	diff ${diff_options} ${file} ${file2} || not_validating="yes"
    elif [ "${method}" = liburp ]; then
	status=0
	cmp ${file} ${file2} || status=1
	if [ "${status}" -ne 0 ]; then
	    status=0
	    diff ${file} ${file2} > /dev/null || status=1
	    if [ "${status}" -ne 0 ]; then
		${TASK_BIN}/liburp ${file}  > file1.${file}
		${TASK_BIN}/liburp ${file2} > file2.${file}
		status=0
		cmp file1.${file} file2.${file} || status=1
		if [ "${status}" -ne 0 ]; then
		    diff ${diff_options} file1.${file} file2.${file} || not_validating="yes"
		    if [ -z "${not_validating}" ]; then
			rm file1.${file} file2.${file}
		    fi
		fi
	    fi
	fi
    elif [ "${method}" = liburp-noresume ]; then
        [[ -f file1.nores ]] && rm -f file1.nores
        ${TASK_BIN}/editbrp -s ${file}  -d file1.nores -i<<EOF
 exclure('>>*******')
EOF
        [[ -f file2.nores ]] && rm -f file2.nores
        ${TASK_BIN}/editbrp -s ${file2} -d file2.nores -i<<EOF
 exclure('>>*******')
EOF
        ${TASK_BIN}/liburp file1.nores > file1.${file}
        ${TASK_BIN}/liburp file2.nores > file2.${file}
        cmp file1.${file} file2.${file} || not_validating="yes"
	if [ -n "${not_validating}" ]; then
	    ## Alors on trouve ce qui ne valide pas
            diff ${diff_options} file1.${file} file2.${file} > diff.${file} || not_validating="yes"
	fi
        if [ -z "${not_validating}" ]; then
            rm file1.${file} file2.${file} file1.nores file2.nores
	    [ -f diff.${file} ] && rm diff.${file}
        else
            cat diff.${file}
        fi
    elif [ "${method}" = SQL ]; then
	fam=$(basename ${file} | cut -d. -f3 | cut -d_ -f2-)
	if [ "$fam" = to_amsua ]; then
	    typ=amsua
	elif [ "$fam" = to_amsub ]; then
	    typ=amsub
	elif [ "$fam" = sc ]; then
	    typ=scat
	elif [ "$fam" = ssmis ]; then
	    typ=ssmi
	else
	    typ=$fam
	fi
	${TASK_BIN}/burp2rdb -in ${file}  -out file1.sql.${file} -type ${typ} || rm file1.sql.${file}
	if [ ! -s file1.sql.${file} ]; then
	    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "Problem with rdb2burp with file ${file}"
	    not_validating="problem"
	else
	    ${TASK_BIN}/burp2rdb -in ${file2} -out file2.sql.${file} -type ${typ} || rm file2.sql.${file}
	    if [ ! -s file2.sql.${file} ]; then
		$SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "Problem with rdb2burp with file ${file2}"
		not_validating="problem"
	    else
		case "${fam}" in
		    to_amsua|to_amsub|csr|airs|iasi|ssmis) satel_elem=",bias_corr" ;;
		    *) satel_elem="" ;;
		esac
		cat > sqldir <<EOF
.nullvalue NULL
.mode tabs
select id_stn,lat,lon,date,time,omp,obsvalue,vcoord,flag${satel_elem} from header natural join data  order by concat(id_stn,lat,lon,date,time);
EOF

		cat sqldir | ${TASK_BIN}/d.sqlite -noheader file1.sql.${file} | sort -n > file1.sqllist.${file} || rm file1.sqllist.${file}
		if [ ! -s file1.sqllist.${file} ]; then
		    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "Problem with SQL request for file ${file}"
		    not_validating="problem"
		else
		    cat sqldir | ${TASK_BIN}/d.sqlite -noheader file2.sql.${file} | sort -n > file2.sqllist.${file} || rm file2.sqllist.${file}
		    if [ ! -s file2.sqllist.${file} ]; then
			$SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "Problem with SQL request for file ${file2}"
			not_validating="problem"
		    else
			diff ${diff_options} file1.sqllist.${file} file2.sqllist.${file} || not_validating="yes"
			cmp file1.sqllist.${file} file2.sqllist.${file} || echo "'cmp' found files different"
			if [ -z "${not_validating}" ]; then
			    rm file1.sql.${file} file2.sql.${file} file1.sqllist.${file} file2.sqllist.${file}
			fi
		    fi ## Fin du else pour le 'if [ ! -s file2.sqllist.${file} ]'
		fi ## Fin du else pour le 'if [ ! -s file1.sqllist.${file} ]'
	    fi ## Fin du else pour le 'if [ ! -s file2.sql.${file} ]'
	fi ## Fin du else pour le 'if [ ! -s file1.sql.${file} ]'
    else
	echo "In function check_result:  method=${method} is not one of the possibility"
	echo "Please use 'fstcomp', 'cmp' or 'diff'"
	exit 1
    fi

    if [ -n "${not_validating}" ]; then
	message="The file ${file} does not validate with method '${method}'!"
	echo "${message}"
	$SEQ_BIN/nodelogger -n $SEQ_NODE -s info  -m "${message}"
	NOT_VALIDATING="yes"
    else
	message="The file ${file} is validating with method '${method}'!"
	echo "${message}"
	$SEQ_BIN/nodelogger -n $SEQ_NODE -s infox -m "${message}"
    fi
}

ref=$(${TASK_BIN}/readlink ${TASK_INPUT}/${SHORT_DATE}.ca)
if [ -f "${ref##*:}" ]; then
    ${SEQ_BIN}/nodelogger -n $SEQ_NODE -s infox -m "Local copy of reference results: ${ref##*:}"
    cp ${ref##*:} ${SHORT_DATE}.ca
else
    ${SEQ_BIN}/nodelogger -n $SEQ_NODE -s infox -m "Downloading reference results: ${ref}"
    ${TASK_BIN}/remote_copy ${ref} ${SHORT_DATE}.ca
fi

if [ "${ENVAR_mode}" != "O-P" ]; then
    status=0
    cmcarc -f ${SHORT_DATE}.ca -t | grep "anal\.inc\.hi\.model\.${SHORT_DATE}" > list_inc_hi || status=1
    if [[ "${status}" -eq 0 ]]; then
	for file in $(cat list_inc_hi); do
	    ext=$(basename ${file} | cut -d_ -f2)
	    if [ "${ext}" = 000 ]; then
		check_result ${file} ../input/anal.inc.hi.model.${SHORT_DATE}/${SHORT_DATE}_inc_hi ${UnitTest_fstd_comp_method}
	    else
		check_result ${file} ../input/anal.inc.hi.model.${SHORT_DATE}/${SHORT_DATE}_${ext}_inc_hi ${UnitTest_fstd_comp_method}
	    fi
	done
    fi
    check_result anal.anl.model.${SHORT_DATE}_000_nosfc   ${UnitTest_fstd_comp_method}
    check_result anal.inc.lo.model.${SHORT_DATE}_000      ${UnitTest_fstd_comp_method}
fi

if [ "${UnitTest_compare_postalt}" = yes ]; then
    if [ "${ENVAR_postalt_output_mode:-one}" = "one" ]; then
	check_result banco.postalt.${SHORT_DATE}_ ../input/postalt/${SHORT_DATE}_ ${UnitTest_burp_comp_method}
    else
	for family in $(echo ${ENVAR_obstyp} | sed 's/,/ /g'); do
	    check_result banco.postalt.${SHORT_DATE}_${family} ../input/postalt/${SHORT_DATE}_${family} ${UnitTest_burp_comp_method}
	done
    fi
else
    ${SEQ_BIN}/nodelogger -n $SEQ_NODE -s infox -m "Avoid comparing 'postalt' files"
fi


if [ -n "${NOT_VALIDATING}" ]; then
    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m "One of the files does not validate"
    exit 1
else
    $SEQ_BIN/nodelogger -n $SEQ_NODE -s infox -m "All files do validate"
fi
