!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE DOBSPPP(PJO,CDFAM)
#if defined (DOC)
!
!**s/r DOBSPPP  - Computation of Jo and the residuals to the observations
!                 for pressure-level observations
!
!*    Purpose:  -Interpolate vertically gomobs to
!                the pressure levels of the observations. Then compute Jo.
!                A linear interpolation in ln(p) is performed.
!
!Arguments
!     PJO:  CONTRIBUTION to Jo
!     CDFAM: FAMILY OF OBSSERVATION
!
#endif
      use obsSpaceData_mod
      use bufr
      IMPLICIT NONE
      REAL*8 PJO
      CHARACTER *2 CDFAM
#include "comlun.cdk"
#include "comdim.cdk"
#include "comdimo.cdk"
#include "comcst.cdk"
#include "comphy.cdk"
#include "commvo.cdk"
#include "commvohr.cdk"
#include "cvcord.cdk"
      INTEGER IPB,IPT,ITY,IDBURP
      INTEGER IOBS,IPOS,IK,IBEGIN,ILAST
      INTEGER J,JDATA
      INTEGER IASS,IXTR,IVCO,IITY,IVNM
      REAL*8 ZVAR,ZOER,ZCON,ZINC,ZPHI
      REAL*8 ZWB,ZWT,ZEXP,ZGAMMA,ZTVG
      REAL*8 ZLEV,ZPT,ZPB,ZTORAD,ZOMA
      REAL*4 ZLAT,ZLON
      LOGICAL LLPRINT,LLNOXTR
!
!     Temperature lapse rate for extrapolation of gz below model surface
!
      LLPRINT   = .FALSE.
      LLNOXTR   = .FALSE.
      zgamma = 0.0065 / GRAV
      zexp = RGASD*zgamma
!
!     1. Computation of (HX - Z)/SIGMA
!
      PJO=0.
      do jdata=1,obsSpaceData%ndata
         if(obs_getFamily(obsSpaceData,bodyIndex=jdata).eq.CDFAM) then
!
! Process all data within the domain of the model
!
            call obs_getbody(obsSpaceData,jdata,
     &                       val_POS= IPOS,val_VAR8=ZVAR,val_VNM=IVNM,
     &                       val_OER8=ZOER,val_PPP8=ZLEV,val_LYR =IK,
     &                       val_ASS=iass,val_XTR=ixtr,val_VCO=ivco,
     &                       val_OBS= IOBS)
            IF ( (iass.EQ.1).AND.(ixtr.EQ.0).AND.(ivco.EQ.2) ) THEN
               IPT = IK + IPOS*NLEVTRL
               IPB = IPT+1
               ZPT  = RPPOBSHR(IK,IOBS)
               ZPB  = RPPOBSHR(IK+1,IOBS)
               ZWB  = LOG(ZLEV/ZPT)/LOG(ZPB/ZPT)
               ZWT  = 1. - ZWB
               zoma = (ZWB*GOMOBSHR(IPB,IOBS) + ZWT*GOMOBSHR(IPT,IOBS)-ZVAR)/ZOER
               PJO = PJO + zoma*zoma
               call obs_setbody(obsSpaceData,jdata,val_OMA8=zoma,val_OMI8=zoma)
!
! Process all upper air data data below model's orography
!
            ELSEIF ( (iass.EQ.1).AND.(ixtr.EQ.2).AND.(ivco.EQ.2) ) THEN
               IPT = NLEVTRL-1 + IPOS*NLEVTRL
               IPB = IPT+1
               IF(IVNM .EQ. BUFR_NEGZ ) THEN
!
! Forward nonlinear model for geopotential data below model's orography
!
                  ZTVG = (1.0 + DELTA * EXP(GOMQHR(NLEVTRL,IOBS)))
     &                     *GOMTHR(NLEVTRL,IOBS)
                  zoma = ( RMTMOBS(iobs) + ZTVG/zgamma
     &                     *(1.-(zlev/gompshr(1,iobs))**zexp) - zvar )/zoer
                  PJO =PJO+zoma*zoma
                  call obs_setbody(obsSpaceData,jdata,val_OMA8=zoma,val_OMI8=zoma)
               ELSE
!
! Forward model for UU,VV,TT,ES below model's orography Extrapolation of order 
! zero from model surface. Allowed at present only for HUMSAT (idburp=158)
!
                  call obs_getheader(obsSpaceData,iobs,val_ITY=IITY)
                  IDBURP    = MOD(IITY,1000)
                  IF (IDBURP .EQ. 158 .AND.
     +                IVNM .EQ. BUFR_NEES) THEN
                    zoma = (GOMOBSHR(IPB,IOBS)-ZVAR)/ZOER
                    PJO =PJO+zoma*zoma
                    call obs_setbody(obsSpaceData,jdata,val_OMA8=zoma,val_OMI8=zoma)
                  ELSE
                    LLNOXTR   = .TRUE.
                    ZTORAD    = 1.D0/(RPI/180.D0)
                    call obs_getheader(obsSpaceData,iobs,val_LAT=ZLAT,val_LON=ZLON)
                    ZLAT      = ZLAT*ZTORAD
                    ZLON      = ZLON*ZTORAD
                    IDBURP    = MOD(IITY,1000)
                    WRITE(NULOUT,*)' DOBSPPP: NO EXTRAPOLATION ALLOWED '
     &               ,' OBS ',obs_getStnID(obsSpaceData,IOBS),' TYPE ',IDBURP, ' ELM '
     &               , IVNM,' LAT ', ZLAT,  ' LON ', ZLON
                  ENDIF
               ENDIF
            ENDIF
         ENDIF
      ENDDO

      IF(LLNOXTR) THEN
        WRITE(NULOUT,*)'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
        WRITE(NULOUT,*)' Warning 3DV:dobsppp: NO EXTRAPOLATION'
     &       ,' ALLOWED SEE LISTING FOR MORE DETAILS'
        WRITE(NULOUT,*)'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
      ENDIF

      RETURN
      END

