      SUBROUTINE SIGMAOP(lcolumng,lcolumnhr,lobsSpaceData)

!*Author  : P. Koklas CMDA/SMC
!*
      use MathPhysConstants_mod
      use obsSpaceData_mod
      use columnData_mod
      use gridStateVector_mod
      IMPLICIT NONE
#include "comlun.cdk"
#include "pardim.cdk"
#include "comdim.cdk"
#include "comdimo.cdk"
#include "comgem.cdk"
      type(struct_obs) :: lobsSpaceData
      type(struct_columnData) :: lcolumn,lcolumng,lcolumnhr
      type(struct_gsv) :: statevector
      INTEGER JLAT, JLON ,J
      CHARACTER*8 CLETIKET
      CHARACTER*1 CLTYPVAR,CLGRTYP
      CHARACTER*2 CLNOMVAR
      INTEGER IULSSF,IDATEO
      INTEGER VFSTLIR,FSTPRM,FNOM,FSTOUV,FCLOS,FSTFRM
      INTEGER IKEY,ILEN,IERR,IDATE

      REAL*8 ZBUFFER(NJ,NFLEV)
      POINTER (PXZBUFFER,ZBUFFER)

      INTEGER INI,INJ,INK, INPAS, INBITS, IDATYP, IDEET
      INTEGER IP1,IP2,IP3,IG1,IG2,IG3,IG4,ISWA,ILENGTH,IDLTF
      INTEGER IUBC,IEXTR1,IEXTR2,IEXTR3

      ILEN = NJ*NFLEV
      CALL HPALLOC(PXZBUFFER,MAX(1,ILEN),IERR,8)

      call gsv_allocate(statevector,ni,nj,nflev,1)
      call gsv_zero(statevector)
      call col_allocate(lcolumn,nflev,nobtot)
      call col_zero(lcolumn)
!C 
!C     1. Opening the statistics file
!C
      IULSSF=0
      IERR=FNOM(iulssf,'./glbcov','RND+OLD+R/O',0)
      IF ( IERR .EQ. 0 ) THEN
        write(nulout,*) 'IBGST - File : ./glbcov'
        write(nulout,*) ' opened as unit file ',iulssf
        ierr =  fstouv(iulssf,'RND+OLD')
      ELSE
        CALL ABORT3D(NULOUT,'SUFILNAM:NO BACKGROUND STAT FILE!!')
      ENDIF
!C
!C     .  2.1 Background error standard deviations
!C
      CLETIKET = 'STDDEV'
      write(nulout,*) 'sigmaop: CLETIKET = ',CLETIKET
      IDATE    = -1
      IP1      = -1
      IP2      = -1
      IP3      = -1
      CLTYPVAR =' '
!C
!C READ IN STANDARD DEVIATION FOR EACH OBSERVATION TYPE
!C
      CLNOMVAR = 'UU'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
      IERR = FSTPRM(IKEY,IDATEO,IDEET,INPAS   &
           ,INI,INJ,INK, INBITS, IDATYP       &
           ,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR,CLETIKET,CLGRTYP   &
           ,IG1,IG2,IG3,IG4,ISWA,ILENGTH,IDLTF   &
           ,IUBC,IEXTR1,IEXTR2,IEXTR3)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%uu3d(JLON,J,INJ-JLAT+1) = (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 else
                    statevector%uu3d(JLON,J,JLAT) =       (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 endif
              END DO
           END DO
       END DO

      CLNOMVAR = 'VV'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%vv3d(JLON,J,INJ-JLAT+1) = (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 else
                    statevector%vv3d(JLON,J,JLAT) =       (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 endif
              END DO
           END DO
        END DO
      CLNOMVAR = 'ES'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%hu3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)
                 else
                    statevector%hu3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)
                 endif
              END DO
           END DO
        END DO
      CLNOMVAR = 'GZ'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%tt3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)*RG*10.
                 else
                    statevector%tt3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)*RG*10.
                 endif
              END DO
           END DO
        END DO

      write(*,*) 'before bilin'
      call flush(6)
      CALL BILIN(lcolumn,statevector,lobsSpaceData)
!???      lcolumn%es(:,:)=lcolumn%hu(:,:)
      lcolumn%gz(:,:)=lcolumn%tt(:,:)
!C
!C     SET THE FIRST-GUESS ERRORS FOR CONVENTIONAL DATA ON PRESSURE LEVELS
!C     --------------------------------------------------------------------
!C
         CALL SETFGEFAM('AI',lcolumn,lcolumng,lobsSpaceData)
         CALL SETFGEFAM('SW',lcolumn,lcolumng,lobsSpaceData)
         CALL SETFGEFAM('UA',lcolumn,lcolumng,lobsSpaceData)
         CALL SETFGEFAM('SF',lcolumn,lcolumng,lobsSpaceData)
         CALL SETFGEFAM('HU',lcolumn,lcolumng,lobsSpaceData)
         CALL SETFGEFAMZ('PR',lcolumn,lcolumng,lobsSpaceData)
!C
!C     SET THE FIRST-GUESS ERRORS FOR RADIO OCCULTATION DATA
!C     -----------------------------------------------------
!C
         write(*,*) 'before setfgedif'
         call flush(6)
         CALL SETFGEDIF('RO',lcolumng,lobsSpaceData)
         write(*,*) 'after setfgedif'
         call flush(6)
!C
!C     DO TEMPERATURE FIRST-GUESS ERROR
!C     ---------------------------------
!C
         write(*,*) 'before reading TT'
         call flush(6)
      CLNOMVAR = 'TT'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
      DO J = 1, NFLEV
         DO JLAT = 1, NJ
            DO JLON=1,NI
               if(IG2 .eq. 0) then
                  statevector%tt3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)
               else
                  statevector%tt3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)
               endif
            END DO
         END DO
      END DO

         write(*,*) 'before bilin'
         call flush(6)
      CALL BILIN(lcolumn,statevector,lobsSpaceData)
         write(*,*) 'before setfgett'
         call flush(6)
      CALL SETFGETT(lcolumn,lcolumng,lobsSpaceData)
         write(*,*) 'after setfgett'
         call flush(6)
!C
!C     RELOAD DATA TO DO SURFACE FIRST-GUESS ERRORS
!C     ---------------------------------------------
!C
      CLNOMVAR = 'P0'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, INK
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%ps3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)*RMBTPA
                 else
                    statevector%ps3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)*RMBTPA
                 endif
              END DO
           END DO
        END DO
      CLNOMVAR = 'UU'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%uu3d(JLON,J,INJ-JLAT+1) = (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 else
                    statevector%uu3d(JLON,J,JLAT) =       (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 endif
              END DO
           END DO
        END DO
      CLNOMVAR = 'VV'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%vv3d(JLON,J,INJ-JLAT+1) = (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 else
                    statevector%vv3d(JLON,J,JLAT) =       (ZBUFFER(JLAT,J)/CONPHY(JLAT))*RMSKNT
                 endif
              END DO
           END DO
        END DO
      CLNOMVAR = 'TT'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%tt3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)
                 else
                    statevector%tt3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)
                 endif
              END DO
           END DO
        END DO
      CLNOMVAR = 'ES'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
        DO J = 1, NFLEV
           DO JLAT = 1, NJ
              DO JLON=1,NI
                 if(IG2 .eq. 0) then
                    statevector%hu3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)
                 else
                    statevector%hu3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)
                 endif
              END DO
           END DO
        END DO

      CALL BILIN(lcolumn,statevector,lobsSpaceData)
!C
!C     SET THE FIRST-GUESS ERRORS FOR THE SURFACE DATA
!C     ------------------------------------------------
!C
      CALL SETFGESURF(lcolumn,lcolumng,lobsSpaceData)

!C     READ IN LN Q FIRST-GUESS ERRORS FOR SETFGEGPS
!C     ---------------------------------------------
!C
      CLNOMVAR = 'LQ'
      IKEY = VFSTLIR(ZBUFFER,IULSSF,INI,INJ,INK,IDATE,CLETIKET,IP1,IP2,IP3,CLTYPVAR,CLNOMVAR)
      DO J = 1, NFLEV
        DO JLAT = 1, NJ
          DO JLON=1,NI
            if(IG2 .eq. 0) then
               statevector%hu3d(JLON,J,INJ-JLAT+1) = ZBUFFER(JLAT,J)
            else
               statevector%hu3d(JLON,J,JLAT) =       ZBUFFER(JLAT,J)
            endif
          END DO
        END DO
      END DO

      CALL BILIN(lcolumn,statevector,lobsSpaceData)
!C
!C     SET THE FIRST-GUESS ERRORS FOR GB-GPS ZTD DATA
!C     ------------------------------------------------
!C
      CALL SETFGEGPS(lcolumn,lcolumng,lobsSpaceData)

      call col_deallocate(lcolumn)
      CALL HPDEALLC(PXZBUFFER,IERR,1)
      RETURN
      END SUBROUTINE SIGMAOP
