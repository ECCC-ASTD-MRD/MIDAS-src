!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------

!--------------------------------------------------------------------------
!! *Purpose*: Do background check on all hyperspectral infrared observations
!!
!! @author P. Koclas *CMC/CMDA  Nov 1998
!!
!--------------------------------------------------------------------------
SUBROUTINE BGCHECK_IR(columng,columnhr,obsSpaceData)
  use obsSpaceData_mod
  use columnData_mod
  use tovs_nl_mod
  use multi_ir_bgck_mod
  use topLevelControl_mod, only: top_BurpSplit
  use mpivar_mod, only: mpi_myid
  use burpFiles_mod
  IMPLICIT NONE

  type(struct_obs) :: obsSpaceData
  type(struct_columnData) :: columng,columnhr
  INTEGER J
  INTEGER,allocatable :: NOBIR(:)
  INTEGER :: index_header,idatyp,krtid
!
  call tmg_start(3,'BGCHECK_IR')
  WRITE(*,FMT=9000)
 9000 FORMAT(//,3(" ****************"),/," BEGIN IR BACKGROUND CHECK",/,3(" ****************"),/)
!
!     Preliminary initializations
!     ---------------------------
!

  TVS_NOBTOV=0
  call multi_ir_init()
  allocate (NOBIR(ninst))
  NOBIR = 0
  

  ! loop over all header indices of the 'TO' family
  ! Set the header list (and start at the beginning of the list)
  call obs_set_current_header_list(obsSpaceData,'TO')
  HEADER: do
     index_header = obs_getHeaderIndex(obsSpaceData)
     if (index_header < 0) exit HEADER

     IDATYP = obs_headElem_i(obsSpaceData,OBS_ITY,index_header)

     IF ( .not.  tvs_Is_idburp_tovs(IDATYP) ) cycle HEADER   ! Proceed to the next header_index

     TVS_NOBTOV = TVS_NOBTOV + 1
     do j=1, ninst
        IF ( tvs_Is_idburp_inst(IDATYP,INST(J)) ) then
           NOBIR(J) = NOBIR(J) + 1
           exit
        end if
     enddo
     
  enddo HEADER
  
  do j=1, ninst
     IF (NOBIR(j) > 0) THEN
        do krtid=1,tvs_nsensors
           if (TVS_INSTRUMENTS(krtid) ==  tvs_get_inst_id(inst(j)) ) THEN
              call HIRQC (columnhr, obsSpaceData, INST(J), krtid)
           endif
        ENDDO
     endif
  enddo
  deallocate (NOBIR)
!
!     Write out contents of obsSpaceData into BURP files
!
  CALL burp_updateFiles(obsSpaceData)
      ! add cloud parameter data to burp files (AIRS,IASI,CrIS,...)
  CALL ADD_CLOUDPRMS(obsSpaceData)
  DO j =1, min(1,obs_numHeader(obsSpaceData))
     call obs_prnthdr(obsSpaceData,j)
     call obs_prntbdy(obsSpaceData,j)
  END DO

 ! deallocate obsSpaceData
  call obs_finalize(obsSpaceData)

  call tmg_stop(3)

END SUBROUTINE BGCHECK_IR





