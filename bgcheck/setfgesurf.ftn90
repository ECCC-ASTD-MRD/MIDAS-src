      SUBROUTINE SETFGESURF(lcolumn,lcolumng,lobsSpaceData)
!*
!***s/r SURFC1DZ  - Computation of Jo and the residuals to the observations
!*                 FOR SURFACE DATAFILES
!*
!*Author  : P. Koclas *CMC/AES  September 2000
!*
!**    Purpose:  -Interpolate vertically the contents of commvo to
!*                the pressure levels of the observations. Then
!*                compute Jo.
!*                A linear interpolation in ln(p) is performed.
!*
      use MathPhysConstants_mod
      use bufr
      use columnData_mod
      use obsSpaceData_mod
      IMPLICIT NONE
#include "comlun.cdk"
#include "comdim.cdk"
#include "comdimo.cdk"
#include "cvcord.cdk"
#include "comfilt.cdk"
      type(struct_columnData) :: lcolumn,lcolumng
      type(struct_obs) :: lobsSpaceData
      INTEGER IPB,IPT,IXTR,IDIM
      INTEGER IOBS,IPOS,IK,IBEGIN,ILAST,JO,IDATA,IDATEND
      INTEGER J,JDATA,IBEGINOB,ILASTOB,ITYP,JJ,ISTYP,JDATA2
      INTEGER ICOUNT,IERR,ILEN,JLIST,JCOUNT,IPOINTR(1)
      REAL*8 ZVAR,ZOER,ZCON,ZINC,ZPHI,ZJON,ZGAMI,ZSLEV,ZQCARG,ZPPOST
      REAL*8 ZWB,ZWT,ZEXP,zexpgz,ZGAMMA,ZTVG,ZPSGOBS
      REAL*8 ZLEV,ZPT,ZPB,ZHHH,ZGAMAZ
      LOGICAL LLOK, LLPRINT,LLUV
      POINTER(PXPOINTR    ,IPOINTR)
!C
!C     Temperature lapse rate for extrapolation of gz below model surface
!C
      LLPRINT = .FALSE.
      ZGAMMA = 0.0065 / GRAV
      zexp = 1/(RGASD*ZGAMMA)
      zexpgz = (RGASD*ZGAMMA)

      DO J = 1,NFILES
         IF ( (CFAMTYP(J) == 'SF') .AND.( NBEGINTYP(J) > 0) .OR.  &
              (CFAMTYP(J) == 'UA') .AND.( NBEGINTYP(J) > 0) .OR.  &
              (CFAMTYP(J) == 'SC') .AND.( NBEGINTYP(J) > 0) .OR.  &
              (CFAMTYP(J) == 'GP') .AND.( NBEGINTYP(J) > 0) )   THEN

           IBEGIN=NBEGINTYP(J)
           ILAST=NENDTYP(J)
!C
!C*    1. Computation of (HX - Z)/SIGMA
!C     .  -----------------------------
!C
!C     Process all data within the domain of the model (excluding GB-GPS
!C     ZTD and ZTD error data)
!C
          ILEN = ILAST - IBEGIN +1
          CALL HPALLOC(PXPOINTR,ILEN,IERR,1)
          DO JLIST = 1,NELEMS
            ICOUNT = 0
            DO JDATA=IBEGIN,ILAST
              LLOK=.FALSE.
              IF ( obs_elem_i(lobsSpaceData,'VCO ',jdata) == 1 ) THEN
                ITYP = obs_elem_i(lobsSpaceData,'VNM ',jdata)
                IF (ITYP == BUFR_NETS .OR. ITYP == BUFR_NEPS .OR.  &
                    ITYP == BUFR_NEPN .OR. ITYP == BUFR_NESS .OR.  &
                    ITYP == BUFR_NEUS .OR. ITYP == BUFR_NEVS    ) THEN
                  LLOK=(obs_elem_i(lobsSpaceData,'ASS ',jdata) .EQ. 1 .AND. ITYP .EQ. NLIST(JLIST))
                ELSE
                  LLOK=(obs_elem_i(lobsSpaceData,'ASS ',jdata) .EQ. 1 .AND.  &
                       ITYP .EQ. NLIST(JLIST) .AND. obs_elem_i(lobsSpaceData,'XTR ',jdata) .ge. 0)
                ENDIF
                IF ( ITYP == BUFR_NEZD .OR. ITYP == BUFR_NEFE ) LLOK=.FALSE.
                IF ( LLOK ) THEN
                  ICOUNT = ICOUNT + 1
                  IPOINTR(ICOUNT) = JDATA
                ENDIF
              ENDIF
            ENDDO
!C
!C-------------- Surface data and data with height vertical coordinate
!C
            IF(ICOUNT.GT.0)          THEN
              DO JCOUNT = 1,ICOUNT
                JDATA = IPOINTR(JCOUNT)
                IOBS = obs_elem_i(lobsSpaceData,'OBS ',jdata)
                ITYP = obs_elem_i(lobsSpaceData,'VNM ',jdata)
                IPOS = obs_elem_i(lobsSpaceData,'POS ',jdata)
                idim=1
                if ( ipos .gt. 5 )idim=0
                IK   = obs_elem_i(lobsSpaceData,'LYR ',jdata)
                ZLEV = obs_elem_r8(lobsSpaceData,'PPP ',jdata)
                ZHHH = ZLEV * GRAV

                IF (ITYP == BUFR_NETS .OR. ITYP == BUFR_NEPS .OR.   &
                    ITYP == BUFR_NEPN .OR. ITYP == BUFR_NESS .OR.   &
                    ITYP == BUFR_NEUS .OR. ITYP == BUFR_NEVS    ) THEN

                  IPT  = IK + IPOS*NFLEV
                  IPB  = IPT+1
                  call obs_set_r4(lobsSpaceData,'FGE ',jdata,real(lcolumn%all(IPB,IOBS)))
!c ***** debug *********
!c                  write(nulout,*) 'stn,ityp,ipt,ipb,fge'
!c                  write(nulout,*) obs_elem_c9(lobsSpaceData,'STID',iobs),ityp,ipt,ipb,
!c     &                            obs_elem_r4(lobsSpaceData,'FGE ',jdata)
!c ***** debug *********
                ELSE
                  IPT  = IK + IPOS*NFLEV
                  IPB  = IPT+1
                  ZPT  = lcolumng%GZ(IK,IOBS)
                  ZPB  = lcolumng%GZ(IK+1,IOBS)
                  ZWB  = idim*(ZPT-ZHHH)/(ZPT-ZPB)
                  ZWT  = 1. - ZWB
                  IF ( obs_elem_i(lobsSpaceData,'XTR ',jdata) .eq. 0) then
                    call obs_set_r4(lobsSpaceData,'FGE ',jdata,   &
                      real(zwb*lcolumn%all(IPB,IOBS) + ZWT*lcolumn%all(IPT,IOBS)) )
                  ELSE
                    call obs_set_r4(lobsSpaceData,'FGE ',jdata,   &
                      real(lcolumn%all(IK + IPOS*NFLEV,IOBS)) )
                  ENDIF
                if(obs_elem_c9(lobsSpaceData,'STID',iobs) .eq. '99999999') then
                  write(nulout,*) 'setfgesurf:stn,ityp,xtr,ipt,ipb,zwt,zwb'   &
                       ,obs_elem_c9(lobsSpaceData,'STID',iobs),ityp,    &
                        obs_elem_i(lobsSpaceData,'XTR ',jdata),ipt,ipb,zwt,zwb
                  write(nulout,*) 'setfgesurf:gobs(ipb),gobs(ipt),fge'   &
                       ,lcolumn%all(IPB,IOBS),lcolumn%all(IPT,IOBS)      &
                       ,obs_elem_r4(lobsSpaceData,'FGE ',jdata)
                endif
                ENDIF
              ENDDO
            ENDIF
          ENDDO
          CALL HPDEALLC(PXPOINTR,IERR,1)

        ENDIF
      END DO

      RETURN
      END SUBROUTINE SETFGESURF
