!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      subroutine fillmvo(cdmvo,cdvar,pvar,knlev,knobs)
#if defined (DOC)
*
***s/r fillmvo - Fill in COMMVOG and/or COMMVOHR
*
*
*     Author  : S. Pellerin ARMA/AES SEPT. 2000
*     Revision:
*           JM Belanger CMDA/SMC  Oct 2000
*                   . 32 bits conversion (Generic LOG)
*           C. Charette - ARMA/SMC - Sept 2004
*                   . Conversion to hybrid vertical coordinate
*
**    Purpose: Fill in COMMVOG/COMMVOHR with trial profiles
*
*Arguments
*
*       input:
*             CDMVO (character*2) : HR fills COMMVOHR
*                                   BG fills COMMVOG
*             CDVAR (character*2) : NOMVAR of the state variable
*             PVAR(knlev,knobs)   : Variable to transfer in COMMVO(G)(HR)
*             KNLEV (integer)     : number of levels of PVAR
*             KNOBS (integer)     : number of observation profiles in variable PVAR
*
#endif
      use columnData_mod 
 
      implicit none
*implicits
#include "pardim.cdk"
#include "comdim.cdk"
#include "comdimo.cdk"

 
 
#include "comgem.cdk"
#include "comphy.cdk"
#include "comcst.cdk"
c
      integer knlev,knobs
      real*8 pvar(knlev,knobs)
      character*2 cdvar,cdmvo
c
      integer jobs,jlev,inlev,istep
c
      if(cdmvo.eq.'HR') then
        inlev = nlevtrl
        istep = nkgdimohr
      else
        inlev = nflev
        istep = nkgdimo
      endif
c
      if (cdvar.eq.'PP') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1,inlev
              rppobshr(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1,inlev
              rppobs(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        endif
      elseif(cdvar.eq.'LV') then
        if(cdmvo.eq.'HR') then
          do jlev = 1,inlev
            vlevhr(jlev) = pvar(jlev,1)
          enddo
        elseif(cdmvo.eq.'BG') then
          do jlev = 1,inlev
            vlev(jlev) = pvar(jlev,1)
          enddo
        endif
      elseif(cdvar.eq.'HY') then
        if(cdmvo.eq.'HR') then
          do jlev = 1,inlev
            vhybhr(jlev) = pvar(jlev,1)
          enddo
        elseif(cdmvo.eq.'BG') then
          do jlev = 1,inlev
            vhybinc(jlev) = pvar(jlev,1)
          enddo
        endif
      elseif(cdvar.eq.'UU') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomuhr(jlev,jobs)=pvar(jlev,jobs)*rmsknt
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomug(jlev,jobs)=pvar(jlev,jobs)*rmsknt
            enddo
          enddo
        endif
      elseif(cdvar.eq.'VV') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomvhr(jlev,jobs)=pvar(jlev,jobs)*rmsknt
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomvg(jlev,jobs)=pvar(jlev,jobs)*rmsknt
            enddo
          enddo
        endif
      elseif(cdvar.eq.'GZ') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomgzhr(jlev,jobs)=pvar(jlev,jobs)*10.*rg
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomgzg(jlev,jobs)=pvar(jlev,jobs)*10.*rg
            enddo
          enddo
        endif
      elseif(cdvar.eq.'HU') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomqhr(jlev,jobs)=log(max(pvar(jlev,jobs),rhumin))
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomqg(jlev,jobs)=log(max(pvar(jlev,jobs),rhumin))
            enddo
          enddo
        endif
      elseif(cdvar.eq.'LQ') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomqhr(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomqg(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        endif
      elseif(cdvar.eq.'ES') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomeshr(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomesg(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        endif
      elseif(cdvar.eq.'TT') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomthr(jlev,jobs) = pvar(jlev,jobs) + tcdk
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomtg(jlev,jobs) = pvar(jlev,jobs) + tcdk
            enddo
          enddo
        endif
      elseif(cdvar.eq.'OZ') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomozhr(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomozg(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        endif
      elseif(cdvar.eq.'TR') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomtrhr(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            do jlev = 1, inlev
              gomtrg(jlev,jobs) = pvar(jlev,jobs)
            enddo
          enddo
        endif
      elseif(cdvar.eq.'P0') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            gompshr(1,jobs)=pvar(1,jobs)*rmbtpa
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            gompsg(1,jobs)=pvar(1,jobs)*rmbtpa
          enddo
        endif
      elseif(cdvar.eq.'TG') then
        if(cdmvo.eq.'HR') then
          do jobs = 1,nobtot
            gomtgrhr(1,jobs)=pvar(1,jobs)
          enddo
        elseif(cdmvo.eq.'BG') then
          do jobs = 1,nobtot
            gomtgrg(1,jobs)=pvar(1,jobs)
          enddo
        endif
      endif
c
      return
      end
