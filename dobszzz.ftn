!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE DOBSZZZ(PJO,CDFAM,lcolumnhr,lobsSpaceData)
#if defined (DOC)
*
***s/r DOBSZZZ  - Computation of Jo and the residuals to the observations
*                 FOR UPPER AIR DATAFILES
*
*
*Author  :  J. St-James, CMDA/SMC July 2003
*
*Revision :
*         C. Charette - ARMA/SMC - Sept 2004
*          - Conversion to hybrid vertical coordinate
*
**    Purpose:  - Interpolate vertically the contents of commvo
*                 onto the heights (in meters) of the observations.
*                 Compute Jo.
*                 A linear interpolation in z is performed.
*
*
*Arguments
*     PJO:  CONTRIBUTION to Jo
*     CDFAM: FAMILY OF OBSSERVATION
*
#endif
      use EarthConstants_mod
      use MathPhysConstants_mod
      use obsSpaceData_mod
      use columnData_mod 
      use bufr 
      IMPLICIT NONE
      REAL*8 PJO
      CHARACTER *2 CDFAM
*implicits
#include "comlun.cdk"
#include "pardim.cdk"
#include "cvcord.cdk"
*
      type(struct_columnData) :: lcolumnhr
      type(struct_obs) :: lobsSpaceData
      INTEGER IPB,IPT,ITY,IDBURP,IVNM
      INTEGER IOBS,IK,IBEGIN,ILAST
      INTEGER J,JDATA
      REAL*8 ZVAR,ZOER,ZCON,ZINC,ZPHI
      REAL*8 ZWB,ZWT,ZEXP,ZGAMMA,ZTVG
      REAL*8 ZLEV,ZPT,ZPB,ZLAT,ZLON,ZTORAD
      REAL*8 DLSUM
      LOGICAL LLOK, LLPRINT,LLNOXTR
      CHARACTER*2 CVAR
C
C     Temperature lapse rate for extrapolation of gz below model surface
C
      LLPRINT   = .FALSE.
c      LLPRINT   = .TRUE.
      LLNOXTR   = .FALSE.
      zgamma = 0.0065 / GRAV
      zexp = MPC_RGAS_DRY_AIR_R8*zgamma
C
      DLSUM=0.
      DO J = 1,NFILES
         IF ( (CFAMTYP(J) .EQ. CDFAM) .AND.( NBEGINTYP(J) .GT. 0)) THEN
            IBEGIN=NBEGINTYP(J)
            ILAST=NENDTYP(J)
C
C*    1. Computation of (HX - Z)/SIGMA
C     .  -----------------------------
C
 100        CONTINUE
C
C     Process all data within the domain of the model
C
            DO JDATA=IBEGIN,ILAST
               LLOK=(obs_elem_i(lobsSpaceData,'ASS ',JDATA) .EQ. 1)
     &              .AND. (obs_elem_i(lobsSpaceData,'XTR ',JDATA) .EQ. 0)
     &              .AND. (obs_elem_i(lobsSpaceData,'VCO ',JDATA) .EQ. 1)
               IF ( LLOK ) THEN
                  IOBS = obs_elem_i(lobsSpaceData,'OBS ',JDATA)
                  ZVAR = obs_elem_r8(lobsSpaceData,'VAR ',JDATA)
                  ZOER = obs_elem_r8(lobsSpaceData,'OER ',JDATA)
                  ZLEV = obs_elem_r8(lobsSpaceData,'PPP ',JDATA)
                  IK   = obs_elem_i(lobsSpaceData,'LYR ',JDATA)
                  IVNM = obs_elem_i(lobsSpaceData,'VNM ',JDATA)
                  IPT = IK + col_getOffsetFromVarno(lcolumnhr,ivnm)
                  IPB = IPT+1
                  cvar = vnl_vartypeFromVarnum(IVNM)
                  ZPT= col_getHeight(lcolumnhr,ik  ,iobs,cvar)/RG
                  ZPB= col_getHeight(lcolumnhr,ik+1,iobs,cvar)/RG
                  ZWB  = (ZPT-ZLEV)/(ZPT-ZPB)
                  ZWT  = 1. - ZWB
                  if(ivnm.eq.bufr_nees) then
                    write(*,*) 'DOBSZZZ: CANNOT ASSIMILATE ES!!!'
                    call qqexit(1)
                  endif
C
C     CONTRIBUTION TO Jo
C
                  call obs_set_r8(lobsSpaceData,'OMA ',JDATA, 
     +                  (ZWB*col_getElem(lcolumnhr,IPB,IOBS)
     +                 + ZWT*col_getElem(lcolumnhr,IPT,IOBS)-ZVAR)/ZOER)
                  DLSUM =DLSUM+obs_elem_r8(lobsSpaceData,'OMA ',JDATA)
     +                 *obs_elem_r8(lobsSpaceData,'OMA ',JDATA)
                  call obs_set_r8(lobsSpaceData,'OMI ',JDATA,obs_elem_r8(lobsSpaceData,'OMA ',JDATA))
               ENDIF
C
            END DO
C
         ENDIF
      END DO
C--------------------------------------------------------------------
      PJO = DLSUM
C--------------------------------------------------------------------
*
      IF(LLNOXTR) THEN
         WRITE(NULOUT,*)'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
         WRITE(NULOUT,*)' Warning 3DV:dobszzz: NO EXTRAPOLATION'
     &        ,' ALLOWED SEE LISTING FOR MORE DETAILS'
         WRITE(NULOUT,*)'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
      ENDIF
*
      RETURN
      END

