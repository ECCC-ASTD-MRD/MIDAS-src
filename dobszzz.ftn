!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE DOBSZZZ(PJO,CDFAM,lcolumnhr,lobsSpaceData)
#if defined (DOC)
*
***s/r DOBSZZZ  - Computation of Jo and the residuals to the observations
*                 FOR UPPER AIR DATAFILES
*
*
*Author  :  J. St-James, CMDA/SMC July 2003
*
*Revision :
*         C. Charette - ARMA/SMC - Sept 2004
*          - Conversion to hybrid vertical coordinate
*
**    Purpose:  - Interpolate vertically the contents of commvo
*                 onto the heights (in meters) of the observations.
*                 Compute Jo.
*                 A linear interpolation in z is performed.
*
*
*Arguments
*     PJO:  CONTRIBUTION to Jo
*     CDFAM: FAMILY OF OBSSERVATION
*
#endif
      use EarthConstants_mod
      use MathPhysConstants_mod
      use obsSpaceData_mod
      use columnData_mod 
      use bufr 
      IMPLICIT NONE
      REAL*8 PJO
      CHARACTER(len=*) :: CDFAM
*
      type(struct_columnData) :: lcolumnhr
      type(struct_obs) :: lobsSpaceData
      INTEGER IPB,IPT,IVNM
      INTEGER INDEX_HEADER,IK
      INTEGER INDEX_BODY
      REAL*8 ZVAR,ZOER
      REAL*8 ZWB,ZWT
      REAL*8 ZLEV,ZPT,ZPB
      LOGICAL LLOK
      CHARACTER*2 VARTYPE
C
      call obs_set_current_body_list(lobsSpaceData, CDFAM)
      BODY: do
         index_body = obs_getBodyIndex(lobsSpaceData)
         if (index_body < 0) exit BODY
C
C*    1. Computation of (HX - Z)/SIGMA
C     .  -----------------------------
C
C     Process all data within the domain of the model
C
         LLOK=(obs_elem_i(lobsSpaceData,'ASS ',INDEX_BODY) .EQ. 1)
     &        .AND. (obs_elem_i(lobsSpaceData,'XTR ',INDEX_BODY) .EQ. 0)
     &        .AND. (obs_elem_i(lobsSpaceData,'VCO ',INDEX_BODY) .EQ. 1)
         IF ( LLOK ) THEN
            INDEX_HEADER = obs_elem_i(lobsSpaceData,'OBS ',INDEX_BODY)
            ZVAR = obs_elem_r(lobsSpaceData,'VAR ',INDEX_BODY)
            ZOER = obs_elem_r(lobsSpaceData,'OER ',INDEX_BODY)
            ZLEV = obs_elem_r(lobsSpaceData,'PPP ',INDEX_BODY)
            IK   = obs_elem_i(lobsSpaceData,'LYR ',INDEX_BODY)
            IVNM = obs_elem_i(lobsSpaceData,'VNM ',INDEX_BODY)
            IPT = IK + col_getOffsetFromVarno(lcolumnhr,ivnm)
            IPB = IPT+1
            varType = vnl_vartypeFromVarnum(IVNM)
            ZPT= col_getHeight(lcolumnhr,ik  ,index_header,varType)/RG
            ZPB= col_getHeight(lcolumnhr,ik+1,index_header,varType)/RG
            ZWB  = (ZPT-ZLEV)/(ZPT-ZPB)
            ZWT  = 1. - ZWB
            if(ivnm.eq.bufr_nees) then
               write(*,*) 'DOBSZZZ: CANNOT ASSIMILATE ES!!!'
               call qqexit(1)
            endif
C
C     CONTRIBUTION TO Jo
C
            call obs_set_r(lobsSpaceData,'OMA ',INDEX_BODY, 
     +            (ZWB*col_getElem(lcolumnhr,IPB,INDEX_HEADER)
     +           + ZWT*col_getElem(lcolumnhr,IPT,INDEX_HEADER)-ZVAR)/ZOER)
            PJO = PJO + obs_elem_r(lobsSpaceData,'OMA ',INDEX_BODY)
     +           *obs_elem_r(lobsSpaceData,'OMA ',INDEX_BODY)
            call obs_set_r(lobsSpaceData,'OMI ',INDEX_BODY,obs_elem_r(lobsSpaceData,'OMA ',INDEX_BODY))
         ENDIF
C
      ENDDO BODY

      RETURN
      END

