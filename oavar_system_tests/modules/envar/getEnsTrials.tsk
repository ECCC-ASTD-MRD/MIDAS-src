#!/bin/ksh
#.*****************************************************************************
#.
#.     JOB NAME - getEnsTrials
#.
#.     STATUS - OPERATIONAL - ESSENTIAL
#.
#.     DESCRIPTION - This task gets the ensemble trial from the GEPS system.
#.
#.*****************************************************************************

if [ "${ENVAR_mode}" != "EnVar" ]; then
    $SEQ_BIN/nodelogger -n $SEQ_NODE -s infox -m  "No ensemble trials to download because you are using ${ENVAR_mode} mode"
else

if [ ! -L "${TASK_INPUT}/enstrials" ]; then
    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "No ensemble trials to download.  Are you doing a 3D-Var?"
else

if [ ! -f "${ENVAR_namelist}" ]; then
    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "Le namelist n'est pas disponible a l'aide de la variable '\${ENVAR_namelist}'"
    exit 1
fi
NUMBER_OF_MEMBERS_IN_NAMELIST=$(grep 'NENS *=' ${ENVAR_namelist} | cut -d= -f2)
if [ "${NUMBER_OF_MEMBERS_IN_NAMELIST}" -lt 1 ]; then
    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "On ne peut determiner le nombre de membres a partir du namelist ${ENVAR_namelist}"
    exit 1
fi

$SEQ_BIN/nodelogger -n $SEQ_NODE -s infox -m  "Get Ensemble trials from $(${TASK_BIN}/readlink ${TASK_INPUT}/enstrials)"

source=$(${TASK_BIN}/readlink ${TASK_INPUT}/enstrials)
## check if local
if [[ "${source}" = /* ]]; then
    local=yes
elif [ "${source%%:*}" = "${TRUE_HOST}" ]; then
    local=yes
    source=${source##*:}
else ## Si ${source} ne commence pas par '/' et ne contient pas pas de ':' alors
    local=no
fi

if [ "${local}" = "yes" ]; then
    ln -s ${source}/${__ENVAR_DATE_m6}_* ${PWD}/.
else
    if [ "${ENVAR_enstrials_download_batch_size}" -eq 0 ]; then
	remote_copy_status=0
	${TASK_BIN}/remote_copy ${source}/${__ENVAR_DATE_m6}_006_* ${TRUE_HOST}:${PWD}/. || remote_copy_status=1
	if [ "${remote_copy_status}" -ne 0 ]; then
	    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m "The copy from ${source} aborted"
	fi
    else
	remote_copy_status=0
	typeset -Z${ENVAR_enstrials_download_batch_size} memnum=0
	while [ 1 ]; do
	    ## ici, on verifie s'il y a bien des fichiers qui se terminent par '${memnum}'
	    enstrials_batch=$(ssh ${source%%:*} ls ${source##*:}/${__ENVAR_DATE_m6}_006_*${memnum} || true)
	    if [ -n "${enstrials_batch}" ]; then
		this_remote_copy_status=0
		${TASK_BIN}/remote_copy ${source}/${__ENVAR_DATE_m6}_006_*${memnum} ${TRUE_HOST}:${PWD}/. || this_remote_copy_status=1
		if [ "${this_remote_copy_status}" -ne 0 ]; then
		    remote_copy_status=1
		    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m "The copy from ${source}/${__ENVAR_DATE_m6}_006_*${memnum} aborted"
		fi
	    fi
	    oldmemnum=${memnum}
	    let memnum=memnum+1
	    [ "${oldmemnum}" -gt "${memnum}" ] && break
	done
    fi
fi

$SEQ_BIN/nodelogger -n $SEQ_NODE -s infox -m  "Put Ensemble trials in $(${TASK_BIN}/true_path ${TASK_OUTPUT})"

typeset -Z${ENVAR_enstrials_extension_length} number
number=1
NUMBER_OF_MEMBERS_AVAILABLE=0
while [ "${number}" -le "${NUMBER_OF_MEMBERS_IN_NAMELIST}" ]; do
    if [ -f ${__ENVAR_DATE_m6}_006_${number} ]; then
	${TASK_BIN}/reflex -ixent ${__ENVAR_DATE_m6}_006_${number} -stats > reflex.list || true
	## Si le grep ne trouve pas cette ligne alors il retournera un statut different de 0 et on signalera l'erreur
	__dammaged__=0
	grep '^ \*\*\*\* This file is OK \*\*\*\*$' reflex.list || __dammaged__=1
	if [ "${__dammaged__}" -eq 0 ]; then
	    mv ${__ENVAR_DATE_m6}_006_${number} ${TASK_OUTPUT}
	    let NUMBER_OF_MEMBERS_AVAILABLE=NUMBER_OF_MEMBERS_AVAILABLE+1
	else
	    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "Ensemble member ${number} is corrupted"
	fi
    else
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "Le membre ${number} n'existe pas"
    fi
    let number=number+1
done
if [ "${NUMBER_OF_MEMBERS_AVAILABLE}" -eq 0 ]; then
    ${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "Tous les membres sont absents!"
    if [ "${ENVAR_fallback_mode}" = 'abort' ]; then
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "Since ENVAR_fallback_mode=${ENVAR_fallback_mode}, then abort!!!"
	if [ "${USER}" = afsiops -o "${USER}" = afsipar ]; then
	    ${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "A&P: CALL CMOIS"
	fi
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "If you want to continue by ignoring those missing ensemble members, put 'ENVAR_fallback_mode=continue' in ${ENVAR_CFG} and launch '${SEQ_CONTAINER}/interpEnsTrials' as indicated in the web page 'https://wiki.cmc.ec.gc.ca/wiki/ARMA/envar/contingency'"
	exit 1
    elif [ "${ENVAR_fallback_mode}" = 'continue' ]; then
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "Since ENVAR_fallback_mode=${ENVAR_fallback_mode}, then continue"
    else
	echo "The variable 'ENVAR_fallback_mode' can only be 'abort' or 'continue' and not '${ENVAR_fallback_mode}'"
	exit 1
    fi
elif [ "${NUMBER_OF_MEMBERS_AVAILABLE}" -ne "${NUMBER_OF_MEMBERS_IN_NAMELIST}" ]; then
    if [ "${ENVAR_fallback_mode}" = 'abort' ]; then
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "Since ENVAR_fallback_mode=${ENVAR_fallback_mode}, then abort!!!"
	if [ "${USER}" = afsiops -o "${USER}" = afsipar ]; then
	    ${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "A&P: CALL CMOIS"
	fi
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "If you want to continue by ignoring those missing ensemble members, put 'ENVAR_fallback_mode=continue' in ${ENVAR_CFG} and launch '${SEQ_CONTAINER}/interpEnsTrials' as indicated in the web page 'https://wiki.cmc.ec.gc.ca/wiki/ARMA/envar/contingency'"
	exit 1
    elif [ "${ENVAR_fallback_mode}" = 'continue' ]; then
	${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s info -m  "Since ENVAR_fallback_mode=${ENVAR_fallback_mode}, then continue"
    else
	echo "The variable 'ENVAR_fallback_mode' can only be 'abort' or 'continue' and not '${ENVAR_fallback_mode}'"
	exit 1
    fi
    if [ "${NUMBER_OF_MEMBERS_AVAILABLE}" -gt "$(echo ${NUMBER_OF_MEMBERS_IN_NAMELIST}*${ENVAR_minimum_proportion_of_members} | bc -l | cut -d. -f1)" ]; then
	$SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "Some members are missing but we can proceed since more than ${ENVAR_minimum_proportion_of_members} are available"
    else
	reponse=$(echo ${ENVAR_minimum_proportion_of_members} | awk '$1<0.5 {print "yes"}')
	if [ "${reponse}" = yes ]; then
	    $SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "Le parametre 'ENVAR_minimum_proportion_of_members' doit etre plus grand que 0.5"
	    exit 1
	fi
	$SEQ_BIN/nodelogger -n $SEQ_NODE -s info -m  "Too much members are missing so we will continue in 3D-Var"
    fi
else
    ${SEQ_BIN}/nodelogger -n ${SEQ_NODE} -s infox -m  "Tous les membres d'ensemble sont presents"
fi


fi ## fin du 'else' relie au 'if [ ! -L "${TASK_INPUT}/enstrials" ]'

fi ## fin du 'else' relie au 'if [ "${ENVAR_mode}" != "EnVar" ]'
