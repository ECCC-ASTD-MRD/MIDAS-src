!-------------------------------------- LICENCE BEGIN ------------------------------------
!Environment Canada - Atmospheric Science and Technology License/Disclaimer,
!                     version 3; Last Modified: May 7, 2008.
!This is free but copyrighted software; you can use/redistribute/modify it under the terms
!of the Environment Canada - Atmospheric Science and Technology License/Disclaimer
!version 3 or (at your option) any later version that should be found at:
!http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
!
!This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
!without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
!See the above mentioned License/Disclaimer for more details.
!You should have received a copy of the License/Disclaimer along with this software;
!if not, you can write to: EC-RPN COMM Group, 2121 TransCanada, suite 500, Dorval (Quebec),
!CANADA, H9P 1J3; or send e-mail to service.rpn@ec.gc.ca
!-------------------------------------- LICENCE END --------------------------------------
!
      SUBROUTINE DHUSFC(CDFAM,lcolumnhr,lobsSpaceData)
#if defined (DOC)
*
***s/r DHUSFC  - Computation of the residuals of the LQ observations
*                FOR SURFACE DATAFILES
*
*
*Author  : D. ANSELMO (MRB/ARMA) October 2004
*          (modified copy of DOBSSFC.ftn)
*Revision:
*           C. Charette ARMA/SMC jan. 2005
*            - Replaced print statements by write statements
*
**    Purpose: - Computation of the LQ innovations at the surface.
*
*
*Arguments
*     CDFAM: FAMILY OF OBSERVATION
*
#endif
      use obsSpaceData_mod
      use columnData_mod
      use bufr
      IMPLICIT NONE
      CHARACTER(len=*) :: CDFAM
C
      type(struct_columnData) :: lcolumnhr
      type(struct_obs) :: lobsSpaceData
      INTEGER INDEX_HEADER
      INTEGER INDEX_BODY
      INTEGER ICOUNT,JCOUNT
      INTEGER, ALLOCATABLE :: IPOINTR(:)
      REAL*8 ZVAR,ZOER
      LOGICAL LLPRINT
C
      LLPRINT = .FALSE.
      allocate(IPOINTR(obs_numBody(lobsSpaceData)))
C
      IF (LLPRINT) print*,' ---dhusfc----------------'

      ! loop over all header indices of the CDFAM family
      call obs_set_current_header_list(lobsSpaceData,CDFAM)
      HEADER: do
         index_header = obs_getHeaderIndex(lobsSpaceData)
         if (index_header < 0) exit HEADER
C
C*    1. Computation of (HX - Z)/SIGMA
C     .  -----------------------------
C
C     Process all data within the domain of the model
C
         ICOUNT = 0

         ! loop over all body indices for this index_header
         call obs_set_current_body_list(lobsSpaceData, index_header)
         BODY: do 
           index_body = obs_getBodyIndex(lobsSpaceData)
           if (index_body < 0) exit BODY
           IF ( obs_bodyElem_i(lobsSpaceData,NCM_VNM,INDEX_BODY) .EQ. BUFR_NEHS .AND.
     &          obs_bodyElem_i(lobsSpaceData,NCM_VCO,INDEX_BODY) .EQ. 1  ) THEN
               ICOUNT = ICOUNT + 1
               IPOINTR(ICOUNT) = INDEX_BODY
           ENDIF
         ENDDO BODY
C--------------T2m,(T-TD)2m,US,VS
C              In this section we always extrapolate linearly the trial
C              field at the model surface to the height of the
C              surface observation whether the observation is above or
C              below the model surface.
C              NOTE: For (T-TD)2m,US,VS we do a zero order extrapolation
c
         IF ( ICOUNT .GT. 0 ) THEN

           DO JCOUNT = 1,ICOUNT
             INDEX_BODY = IPOINTR(JCOUNT)
             ZVAR = obs_bodyElem_r(lobsSpaceData,NCM_VAR,INDEX_BODY)
             ZOER = obs_bodyElem_r(lobsSpaceData,NCM_OER,INDEX_BODY)
             call obs_bodySet_r(lobsSpaceData,NCM_OMA,INDEX_BODY, 
     +           (col_getElem(lcolumnhr,col_getNumLev(LCOLUMNHR,'TH'),INDEX_HEADER,'HU')-ZVAR)
     +            / ZOER)

             IF ( LLPRINT ) THEN
               write(*,*)' -------------------------'
               write(*,*)'   index_body  = ',INDEX_BODY
               write(*,*)'   index_header   = ',INDEX_HEADER
               write(*,*)'   zvar   = ',ZVAR
               write(*,*)'   zoer   = ',ZOER
               write(*,*)'   lcolumnhr_nlev= ',col_getNumLev(LCOLUMNHR,'TH')
               write(*,*)'   lcolumnhr_hu(lcolumnhr_nlev,index_header) = '
     &              ,col_getElem(lcolumnhr,col_getNumLev(LCOLUMNHR,'TH'),INDEX_HEADER,'HU')
               write(*,*)'   O-Psfc = '
     &              ,-obs_bodyElem_r(lobsSpaceData,NCM_OMA,INDEX_BODY)*ZOER
               write(*,*)' -------------------------'
             ENDIF
           ENDDO

         ENDIF
C
      ENDDO HEADER

      deallocate(IPOINTR)
C--------------------------------------------------------------------
      RETURN
      END
