      SUBROUTINE  SUFILNAM
      use mpi
      IMPLICIT NONE
#if defined (DOC)
*s/r  SUFILNAM -INITIALZE INPUT/OUTPUT FILE NAMES FOR 3DVAR.
*
************************************************************************
*
*Author    . P. KOCLAS CMC/CMSV TEL. 4628
*     Revision:
*     .      J. St-James  *CMC/CMSV JUNE 1997
*                    - add a new key for the file containing the
*                      lat, lon positions of obs. (NINCREM = 2)
*                    - documentation
*     .      P. KOCLAS    *CMC/CMDA JAN 2000
*                    -ADD SATWIND (SW) FAMILY
*     .      S. Pellerin *ARMA/AES march 2000
*                    - Output stat file
*     .      S. Pellerin *ARMA/SMC May 2000
*                    - Illimination of NAMBRN for I/O file name
*                      CCARD only from now on
*                    - Logical unit cleanup
*     .      S. Pellerin *ARMA/SMC nov. 2001
*                    - Introdution of key 'exc4dv' controling
*                      3Dvar mode / 4Dvar exchange directory
*     .      N. Wagneur *MSC/CMC June 2002
*                    - Addition of GOES ('GO') familiy
*     .      J. St-James *CMDA/SMC - July 2003
*                    - Add Profiler ('PR') family
*     .      JM Belanger *MSC/CMC Nov 2003
*                    - Addition of QUIKSCAT ('SC') familiy
*     .      J.M. Aparicio *ARMA/MSC* October 2006
*                    - Adapt for GPSRO
*     .      A. Beaulne *CMDA/SMC - August 2007
*                    - Put a dot after the AX_## of all families 
*                      in CLE variable
*     .      Bin He   *ARMA/SMC   - Apr. 2008 
*                    - Reading multiple trial files.  
*                   Note that asumming Units starting from 550 are
*                    reserved for trial files.
*     .      S. Pellerin, ARMA, August 2008
*                    - Use of fnom to generate automatic logical unit
*                      numbers of multiple trial files
*     .      Bin HE  , ARMA, Oct. 2008 
*                    - Hardcoded the name of trial files as "TRLM_??".
*                      Use "INQUIRE" to detect the existance of these trial files. 
*     .      J.W. Blezius, RPN, Dec. 2009
*                    - move anlm & rehm output off-line to file anlm_defunct and
*                      rehm_defunct (anlm and rehm are now produced by AddAnalInc)
*     .      Bin He ,  ARMA,  Jan. 2009 .  
*                    - Implemented  MPI version .   
*
*            Bin HE,   *ARMA/MRB*   Mar. 2013
*                    - Cleanup the code  ..  
*
************************************************************************
#endif
*
#include "comct0.cdk"
#include "comvfiles.cdk"
      INTEGER,PARAMETER :: INFIL=129
      CHARACTER(len=128) ::  CLVALU(INFIL)
      CHARACTER(len=4) :: CFAMI(INFIL)
      INTEGER :: INFIL,IER,INBLKS,II,I,JJ
      INTEGER :: FNOM,FCLOS,NUMBLKS
      LOGICAL ::  isExist_L 
!----------------------------------------------------------------------
!    0. Initialize CLVALU and CFAMI  . 
       CLVALU(:)=' '
       CFAMI(:)=' ' 
!    1. hardcode the names of input files.  
       CLVALU(1) = './flnml'  
       CLVALU(2) = './obscov'  
       CLVALU(3) = './trlm'  
       CLVALU(4) = './anlm_defunct'
       CLVALU(5) = './glbcov'  
       CLVALU(6) = './rebm_notused'  
       CLVALU(7) = './rehm_defunct'  
       CLVALU(8) = '' 
       CLVALU(9) = './preconin'  

       CLVALU(10) = 'brpuan'  
       CLVALU(11) = 'brpuas'  
       CLVALU(12) = 'brpai'  
       CLVALU(13) = 'brpaie'  
       CLVALU(14) = 'brpaiw'  
       CLVALU(15) = 'brpain'  
       CLVALU(16) = 'brpais'  
       CLVALU(17) = 'brpsfc'  
       CLVALU(18) = 'brpsf'  
       CLVALU(19) = 'brptov'  
       CLVALU(20) = 'brpsw'  
       CLVALU(21) = 'brpswgoes9'  
       CLVALU(22) = 'brpswgoese'  
       CLVALU(23) = 'brpswgoesw'  
       CLVALU(24) = 'brpswmodis'  
       CLVALU(25) = 'brpswmtsate'  
       CLVALU(26) = 'brpswmtsatw'  

       CLVALU(27) = 'brpgo'  
       CLVALU(28) = 'brpsc'  
       CLVALU(29) = 'brppr'  
       CLVALU(30) = 'brpro'  
       CLVALU(31) = 'brphum'  
       CLVALU(32) = 'brpsat'  
       CLVALU(33) = 'brpssm'  
       CLVALU(34) = 'brpo3'  
       CLVALU(35) = 'brpoz'  
       CLVALU(36) = 'brpgp'  
! hard-code the Family names..they should match with the input files .    
       CFAMI(10)  = 'UA' 
       CFAMI(11)  = 'UA' 
       CFAMI(12)  = 'AI' 
       CFAMI(13)  = 'AI' 
       CFAMI(14)  = 'AI' 
       CFAMI(15)  = 'AI' 
       CFAMI(16)  = 'AI' 
       CFAMI(17)  = 'SF' 
       CFAMI(18)  = 'SF' 
       CFAMI(19)  = 'TO' 
       CFAMI(20)  = 'SW' 
       CFAMI(21)  = 'SW' 
       CFAMI(22)  = 'SW' 
       CFAMI(23)  = 'SW' 
       CFAMI(24)  = 'SW' 
       CFAMI(25)  = 'SW' 
       CFAMI(26)  = 'SW' 
       CFAMI(27)  = 'GO' 
       CFAMI(28)  = 'SC' 
       CFAMI(29)  = 'PR' 
       CFAMI(30)  = 'RO' 
       CFAMI(31)  = 'HU' 
       CFAMI(32)  = 'ST' 
       CFAMI(33)  = 'MI' 
       CFAMI(34)  = 'OZ' 
       CFAMI(35)  = 'OZ' 
       CFAMI(36)  = 'GP' 
!C
! 3. ------ check Preconditioning..    
      INQUIRE(FILE=CLVALU(9),EXIST=isExist_L)
      IF ( isExist_L ) THEN
        CPCONF=clvalu(9)
        lpcon=.true.
      ELSE
        lpcon=.false.
      ENDIF 
!c
!C 4. -------Check Burp files.... 
       NKOUNT=0
       II=0 
       DO JJ=10,INFIL
         IF(CLVALU(JJ) /= '') THEN
           INQUIRE(FILE=CLVALU(JJ),EXIST=isExist_L)
         ELSE
           EXIT  
         ENDIF 
         IF (isExist_L)THEN
            IER=FNOM(II,CLVALU(JJ),'RND+OLD',0)
            IF ( IER == 0 ) THEN
               WRITE(*,*)' Open File : ',CLVALU(JJ)
               INBLKS=NUMBLKS(II)
               IF ( INBLKS .GT. 0 ) THEN
                 NKOUNT=NKOUNT+1
                 CBURP(NKOUNT)=CLVALU(JJ)
                 CFAM(NKOUNT)=CFAMI(JJ)
               ENDIF 
            ENDIF  !  
            IER= FCLOS(II)
         ENDIF 
      ENDDO !  JJ 

      DO JJ=1,NKOUNT
        WRITE(*,'(1X,A2,1X,A128)' ) CFAM(JJ),CBURP(JJ)
      END DO

      RETURN
      END
