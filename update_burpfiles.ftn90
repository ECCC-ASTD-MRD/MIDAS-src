SUBROUTINE UPDATE_BURPFILES(obsSpaceData)
!
!     PURPOSE: READ OBSDAT AND UPDATE CMC BURP FILES
!
!     ARGUMENTS:
!                   obsSpaceData   - obsdat-file object
!
!       AUTHOR: P. KOCLAS(CMC CMDA)
!       Revision:
!     NOTE:
!     BURP FILES ARE ASSUMED TO BE PRESENT IN CURRENT WORKING DIRECTORY
!
      use topLevelControl_mod
      use mpivar_mod
      use ObsSpacedata_mod
      use burp_read
      use burpFiles_mod
      IMPLICIT NONE
      type (struct_obs), intent(inout) :: obsSpaceData

      INTEGER J
      INTEGER FILENUMB,IBRP1,IER,INRECS,ISTAT,LNMX
      INTEGER  FNOM,FCLOS,MRFCLS,MRFOPN,MRFMXL
      EXTERNAL FNOM,FCLOS,MRFCLS,MRFOPN,MRFMXL
      character(len=256) :: BURP_SPLIT_VAR
      integer length_burp_split

      call tmg_start(93,'POST_UPDATEBRP')

      if(top_AnalysisMode()) call vint3dfd(obs_oma,obsSpaceData)
      call vint3dfd(obs_omp,obsSpaceData)
      if(top_AnalysisMode()) call setassflg(obsSpaceData)
      call flaguvtofd_obsdat(obsSpaceData)
!
!  ------NOTE----------
! currently supported families of data 'UA' 'AI' 'SC' 'SF' 'SW' 'TO'
!
!     READ DATA FROM FILES CONTAINED IN ARRAY CLVAL.
!
      WRITE(*,*)' '
      WRITE(*,*)'================================================='
      WRITE(*,*)'                UPDATE_BURP BEGIN                '
      WRITE(*,*)'================================================='
      WRITE(*,*)' '

      ier = 0
      call get_environment_variable('ARMA_BURP_SPLIT',BURP_SPLIT_VAR,length_burp_split,ier,.true.)
      if (ier.gt.1) then
         write(*,*) 'update_burpfiles: Problem when getting the environment variable ARMA_BURP_SPLIT'
      end if
      if (ier.eq.1) then 
         write(*,*) 'update_burpfiles: The environment variable ARMA_BURP_SPLIT has not been detected so we read global observation files'
         CALL obs_expandToMpiGlobal(obsSpaceData)
         IF(mpi_myid /= 0) RETURN
      else
         write(*,*) 'update_burpfiles: The environment variable ARMA_BURP_SPLIT has been detected so we read splitted observation files'
      end if

      DO J =1,burp_nfiles
!      IER   =FNOM(IBRP1,burp_cfilnam(J),'RND+OLD',0)
!      IF ( IER .EQ. 0 ) THEN
!       INRECS=MRFOPN(IBRP1,'READ')
!       LNMX =MRFMXL(IBRP1)
!       ISTAT=MRFCLS(IBRP1)
!       print *,  ' LONGUEUR MAX=',trim(burp_cfilnam(J)),LNMX
!IER = FCLOS(IBRP1)
!      ENDIF
!        call UPDATE_BURP(obsSpaceData,burp_cfamtyp(J),burp_cfilnam(J),J,LNMX)
         call UPDATE_BURP(obsSpaceData,burp_cfamtyp(J),burp_cfilnam(J),J)
      END DO
!
      WRITE(*,*)' '
      WRITE(*,*)'================================================='
      WRITE(*,*)'                UPDATE_BURP    END               '
      WRITE(*,*)'================================================='
      WRITE(*,*)' '

      call tmg_stop(93)

END SUBROUTINE UPDATE_BURPFILES
